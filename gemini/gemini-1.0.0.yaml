openapi: 3.0.3
info:
  title: GenerativeLanguageAPI
  description: >-
    The Gemini API allows developers to build generative AI applications using
    Gemini models. Gemini is our most capable model, built from the ground up to
    be multimodal. It can generalize and seamlessly understand, operate across,
    and combine different types of information including language, images,
    audio, video, and code. You can use the Gemini API for use cases like
    reasoning across text and images, content generation, dialogue agents,
    summarization and classification systems, and more.
  version: v1beta
  x-google-revision: '20250902'
externalDocs:
  description: Find more info here.
  url: 'https://developers.generativeai.google/api'
servers:
  - url: 'https://generativelanguage.googleapis.com'
    description: Global Endpoint
security:
  - default: []
paths:
  '/v1beta/tunedModels/{tunedModel}/operations':
    get:
      tags:
        - generativelanguage
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: ListOperations
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: filter
          in: query
          description: The standard list filter.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: The standard list page size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: The standard list page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/batches:
    get:
      tags:
        - generativelanguage
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: ListOperationsBy
      parameters:
        - name: filter
          in: query
          description: The standard list filter.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: The standard list page size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: The standard list page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      security:
        - default: []
      x-google-operation-name: ListOperations
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}/operations':
    get:
      tags:
        - generativelanguage
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: ListOperationsByModel
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: filter
          in: query
          description: The standard list filter.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: The standard list page size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: The standard list page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      security:
        - default: []
      x-google-operation-name: ListOperations
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}/operations/{operation}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the
        API

        service.
      operationId: GetOperation
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: operation
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/generatedFiles/{generatedFile}/operations/{operation}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the
        API

        service.
      operationId: GetOperationByGeneratedFileAndOperation
      parameters:
        - name: generatedFile
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: operation
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      security:
        - default: []
      x-google-operation-name: GetOperation
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/batches/{generateContentBatch}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the
        API

        service.
      operationId: GetOperationByGenerateContentBatch
      parameters:
        - name: generateContentBatch
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      security:
        - default: []
      x-google-operation-name: GetOperation
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is

        no longer interested in the operation result. It does not cancel the

        operation. If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: DeleteOperation
      parameters:
        - name: generateContentBatch
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}/operations/{operation}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the
        API

        service.
      operationId: GetOperationByModelAndOperation
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: operation
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      security:
        - default: []
      x-google-operation-name: GetOperation
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/operations/{operation}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the
        API

        service.
      operationId: GetOperationByCorpusAndOperation
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: operation
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      security:
        - default: []
      x-google-operation-name: GetOperation
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/batches/{generateContentBatch}:cancel':
    post:
      tags:
        - generativelanguage
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of `1`,

        corresponding to `Code.CANCELLED`.
      operationId: CancelOperation
      parameters:
        - name: generateContentBatch
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:generateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a model response given an input `GenerateContentRequest`.

        Refer to the [text generation

        guide](https://ai.google.dev/gemini-api/docs/text-generation) for
        detailed

        usage information. Input capabilities differ between models, including

        tuned models. Refer to the [model

        guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning

        guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
      operationId: GenerateContent
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:generateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a model response given an input `GenerateContentRequest`.

        Refer to the [text generation

        guide](https://ai.google.dev/gemini-api/docs/text-generation) for
        detailed

        usage information. Input capabilities differ between models, including

        tuned models. Refer to the [model

        guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning

        guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
      operationId: GenerateContentByTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-google-operation-name: GenerateContent
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/dynamic/{dynamicId}:generateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a model response given an input `GenerateContentRequest`.

        Refer to the [text generation

        guide](https://ai.google.dev/gemini-api/docs/text-generation) for
        detailed

        usage information. Input capabilities differ between models, including

        tuned models. Refer to the [model

        guide](https://ai.google.dev/gemini-api/docs/models/gemini) and [tuning

        guide](https://ai.google.dev/gemini-api/docs/model-tuning) for details.
      operationId: GenerateContentByDynamicId
      parameters:
        - name: dynamicId
          in: path
          description: >-
            Part of `model`. Required. The name of the `Model` to use for
            generating the completion.


            Format: `models/{model}`.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-google-operation-name: GenerateContent
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:generateAnswer':
    post:
      tags:
        - generativelanguage
      description: |-
        Generates a grounded answer from the model given an input
        `GenerateAnswerRequest`.
      operationId: GenerateAnswer
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAnswerRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAnswerResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:streamGenerateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a [streamed

        response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)

        from the model given an input `GenerateContentRequest`.
      operationId: StreamGenerateContent
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:streamGenerateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a [streamed

        response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)

        from the model given an input `GenerateContentRequest`.
      operationId: StreamGenerateContentByTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-google-operation-name: StreamGenerateContent
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/dynamic/{dynamicId}:streamGenerateContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a [streamed

        response](https://ai.google.dev/gemini-api/docs/text-generation?lang=python#generate-a-text-stream)

        from the model given an input `GenerateContentRequest`.
      operationId: StreamGenerateContentByDynamicId
      parameters:
        - name: dynamicId
          in: path
          description: >-
            Part of `model`. Required. The name of the `Model` to use for
            generating the completion.


            Format: `models/{model}`.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateContentResponse'
      security:
        - default: []
      x-google-operation-name: StreamGenerateContent
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:embedContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Generates a text embedding vector from the input `Content` using the

        specified [Gemini Embedding

        model](https://ai.google.dev/gemini-api/docs/models/gemini#text-embedding).
      operationId: EmbedContent
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbedContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedContentResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:batchEmbedContents':
    post:
      tags:
        - generativelanguage
      description: |-
        Generates multiple embedding vectors from the input `Content` which
        consists of a batch of strings represented as `EmbedContentRequest`
        objects.
      operationId: BatchEmbedContents
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEmbedContentsRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEmbedContentsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:countTokens':
    post:
      tags:
        - generativelanguage
      description: >-
        Runs a model's tokenizer on input `Content` and returns the token count.

        Refer to the [tokens
        guide](https://ai.google.dev/gemini-api/docs/tokens)

        to learn more about tokens.
      operationId: CountTokens
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountTokensRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountTokensResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:batchGenerateContent':
    post:
      tags:
        - generativelanguage
      description: Enqueues a batch of `GenerateContent` requests for batch processing.
      operationId: BatchGenerateContent
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGenerateContentOperation'
      security:
        - default: []
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:batchGenerateContent':
    post:
      tags:
        - generativelanguage
      description: Enqueues a batch of `GenerateContent` requests for batch processing.
      operationId: BatchGenerateContentByTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGenerateContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGenerateContentOperation'
      security:
        - default: []
      x-google-operation-name: BatchGenerateContent
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:asyncBatchEmbedContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Enqueues a batch of `EmbedContent` requests for batch processing.

        We have a `BatchEmbedContents` handler in `GenerativeService`, but it
        was

        synchronized. So we name this one to be `Async` to avoid confusion.
      operationId: AsyncBatchEmbedContent
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchEmbedContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncBatchEmbedContentOperation'
      security:
        - default: []
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:asyncBatchEmbedContent':
    post:
      tags:
        - generativelanguage
      description: >-
        Enqueues a batch of `EmbedContent` requests for batch processing.

        We have a `BatchEmbedContents` handler in `GenerativeService`, but it
        was

        synchronized. So we name this one to be `Async` to avoid confusion.
      operationId: AsyncBatchEmbedContentByTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchEmbedContentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncBatchEmbedContentOperation'
      security:
        - default: []
      x-google-operation-name: AsyncBatchEmbedContent
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/cachedContents:
    get:
      tags:
        - generativelanguage
      description: Lists CachedContents.
      operationId: ListCachedContents
      parameters:
        - name: pageSize
          in: query
          description: >-
            Optional. The maximum number of cached contents to return. The
            service may return

            fewer than this value.

            If unspecified, some default (under maximum) number of items will be

            returned.

            The maximum value is 1000; values above 1000 will be coerced to
            1000.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous
            `ListCachedContents` call.

            Provide this to retrieve the subsequent page.


            When paginating, all other parameters provided to
            `ListCachedContents` must

            match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCachedContentsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Creates CachedContent resource.
      operationId: CreateCachedContent
      parameters: []
      requestBody:
        description: Required. The cached content to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CachedContent'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedContent'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/cachedContents/{id}':
    get:
      tags:
        - generativelanguage
      description: Reads CachedContent resource.
      operationId: GetCachedContent
      parameters:
        - name: id
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedContent'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes CachedContent resource.
      operationId: DeleteCachedContent
      parameters:
        - name: id
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates CachedContent resource (only expiration is updatable).
      operationId: UpdateCachedContent
      parameters:
        - name: id
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: The list of fields to update.
          required: false
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: Required. The content cache entry to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CachedContent'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedContent'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:generateMessage':
    post:
      tags:
        - generativelanguage
      description: Generates a response from the model given an input `MessagePrompt`.
      operationId: GenerateMessage
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMessageRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateMessageResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:countMessageTokens':
    post:
      tags:
        - generativelanguage
      description: Runs a model's tokenizer on a string and returns the token count.
      operationId: CountMessageTokens
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountMessageTokensRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountMessageTokensResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/files:
    get:
      tags:
        - generativelanguage
      description: Lists the metadata for `File`s owned by the requesting project.
      operationId: ListFiles
      parameters:
        - name: pageSize
          in: query
          description: |-
            Optional. Maximum number of `File`s to return per page.
            If unspecified, defaults to 10. Maximum `page_size` is 100.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Optional. A page token from a previous `ListFiles` call.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Creates a `File`.
      operationId: CreateFile
      parameters: []
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFileResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/files/{file}':
    get:
      tags:
        - generativelanguage
      description: Gets the metadata for the given `File`.
      operationId: GetFile
      parameters:
        - name: file
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes the `File`.
      operationId: DeleteFile
      parameters:
        - name: file
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/files/{file}:download':
    get:
      tags:
        - generativelanguage
      description: Download the `File`.
      operationId: DownloadFile
      parameters:
        - name: file
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFileResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/generatedFiles/{generatedFile}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets a generated file. When calling this method via REST, only the
        metadata

        of the generated file is returned. To retrieve the file content via
        REST,

        add alt=media as a query parameter.
      operationId: GetGeneratedFile
      parameters:
        - name: generatedFile
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedFile'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/generatedFiles:
    get:
      tags:
        - generativelanguage
      description: Lists the generated files owned by the requesting project.
      operationId: ListGeneratedFiles
      parameters:
        - name: pageSize
          in: query
          description: |-
            Optional. Maximum number of `GeneratedFile`s to return per page.
            If unspecified, defaults to 10. Maximum `page_size` is 50.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: Optional. A page token from a previous `ListGeneratedFiles` call.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGeneratedFilesResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}':
    get:
      tags:
        - generativelanguage
      description: >-
        Gets information about a specific `Model` such as its version number,
        token

        limits,

        [parameters](https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters)

        and other metadata. Refer to the [Gemini models

        guide](https://ai.google.dev/gemini-api/docs/models/gemini) for detailed

        model information.
      operationId: GetModel
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/models:
    get:
      tags:
        - generativelanguage
      description: >-
        Lists the
        [`Model`s](https://ai.google.dev/gemini-api/docs/models/gemini)

        available through the Gemini API.
      operationId: ListModels
      parameters:
        - name: pageSize
          in: query
          description: >-
            The maximum number of `Models` to return (per page).


            If unspecified, 50 models will be returned per page.

            This method returns at most 1000 models per page, even if you pass a
            larger

            page_size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            A page token, received from a previous `ListModels` call.


            Provide the `page_token` returned by one request as an argument to
            the next

            request to retrieve the next page.


            When paginating, all other parameters provided to `ListModels` must
            match

            the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModelsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific TunedModel.
      operationId: GetTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TunedModel'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes a tuned model.
      operationId: DeleteTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates a tuned model.
      operationId: UpdateTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: Optional. The list of fields to update.
          required: false
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: Required. The tuned model to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TunedModel'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TunedModel'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/tunedModels:
    get:
      tags:
        - generativelanguage
      description: Lists created tuned models.
      operationId: ListTunedModels
      parameters:
        - name: pageSize
          in: query
          description: >-
            Optional. The maximum number of `TunedModels` to return (per page).

            The service may return fewer tuned models.


            If unspecified, at most 10 tuned models will be returned.

            This method returns at most 1000 models per page, even if you pass a
            larger

            page_size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListTunedModels`
            call.


            Provide the `page_token` returned by one request as an argument to
            the next

            request to retrieve the next page.


            When paginating, all other parameters provided to `ListTunedModels`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: filter
          in: query
          description: >-
            Optional. A filter is a full text search over the tuned model's
            description and

            display name. By default, results will not include tuned models
            shared

            with everyone.


            Additional operators:
              - owner:me
              - writers:me
              - readers:me
              - readers:everyone

            Examples:
              "owner:me" returns all tuned models to which caller has owner role
              "readers:me" returns all tuned models to which caller has reader role
              "readers:everyone" returns all tuned models that are shared with everyone
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTunedModelsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: |-
        Creates a tuned model.
        Check intermediate tuning progress (if any) through the
        [google.longrunning.Operations] service.

        Access status and results through the Operations service.
        Example:
          GET /v1/tunedModels/az2mb0bpw6i/operations/000-111-222
      operationId: CreateTunedModel
      parameters:
        - name: tunedModelId
          in: query
          description: >-
            Optional. The unique id for the tuned model if specified.

            This value should be up to 40 characters, the first character must
            be a

            letter, the last could be a letter or a number. The id must match
            the

            regular expression: `[a-z]([a-z0-9-]{0,38}[a-z0-9])?`.
          required: false
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: Required. The tuned model to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TunedModel'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTunedModelOperation'
      security:
        - default: []
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}/permissions':
    get:
      tags:
        - generativelanguage
      description: Lists permissions for the specific resource.
      operationId: ListPermissions
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: >-
            Optional. The maximum number of `Permission`s to return (per page).

            The service may return fewer permissions.


            If unspecified, at most 10 permissions will be returned.

            This method returns at most 1000 permissions per page, even if you
            pass

            larger page_size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListPermissions`
            call.


            Provide the `page_token` returned by one request as an argument to
            the

            next request to retrieve the next page.


            When paginating, all other parameters provided to `ListPermissions`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Create a permission to a specific resource.
      operationId: CreatePermission
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Required. The permission to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/permissions':
    get:
      tags:
        - generativelanguage
      description: Lists permissions for the specific resource.
      operationId: ListPermissionsByCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: >-
            Optional. The maximum number of `Permission`s to return (per page).

            The service may return fewer permissions.


            If unspecified, at most 10 permissions will be returned.

            This method returns at most 1000 permissions per page, even if you
            pass

            larger page_size.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListPermissions`
            call.


            Provide the `page_token` returned by one request as an argument to
            the

            next request to retrieve the next page.


            When paginating, all other parameters provided to `ListPermissions`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
      security:
        - default: []
      x-google-operation-name: ListPermissions
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Create a permission to a specific resource.
      operationId: CreatePermissionByCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Required. The permission to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-google-operation-name: CreatePermission
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}/permissions/{permission}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific Permission.
      operationId: GetPermission
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes the permission.
      operationId: DeletePermission
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates the permission.
      operationId: UpdatePermission
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: |-
            Required. The list of fields to update. Accepted ones:
             - role (`Permission.role` field)
          required: true
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: >-
          Required. The permission to update.


          The permission's `name` field is used to identify the permission to
          update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/permissions/{permission}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific Permission.
      operationId: GetPermissionByCorpusAndPermission
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-google-operation-name: GetPermission
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes the permission.
      operationId: DeletePermissionByCorpusAndPermission
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-google-operation-name: DeletePermission
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates the permission.
      operationId: UpdatePermissionByCorpusAndPermission
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: permission
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: |-
            Required. The list of fields to update. Accepted ones:
             - role (`Permission.role` field)
          required: true
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: >-
          Required. The permission to update.


          The permission's `name` field is used to identify the permission to
          update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
        - default: []
      x-google-operation-name: UpdatePermission
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:transferOwnership':
    post:
      tags:
        - generativelanguage
      description: |-
        Transfers ownership of the tuned model.
        This is the only way to change ownership of the tuned model.
        The current owner will be downgraded to writer role.
      operationId: TransferOwnership
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnershipRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferOwnershipResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:predict':
    post:
      tags:
        - generativelanguage
      description: Performs a prediction request.
      operationId: Predict
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:predictLongRunning':
    post:
      tags:
        - generativelanguage
      description: Same as Predict but returns an LRO.
      operationId: PredictLongRunning
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictLongRunningRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictLongRunningOperation'
      security:
        - default: []
      x-google-lro: 'true'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/corpora:
    get:
      tags:
        - generativelanguage
      description: Lists all `Corpora` owned by the user.
      operationId: ListCorpora
      parameters:
        - name: pageSize
          in: query
          description: |-
            Optional. The maximum number of `Corpora` to return (per page).
            The service may return fewer `Corpora`.

            If unspecified, at most 10 `Corpora` will be returned.
            The maximum size limit is 20 `Corpora` per page.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListCorpora` call.


            Provide the `next_page_token` returned in the response as an
            argument to

            the next request to retrieve the next page.


            When paginating, all other parameters provided to `ListCorpora`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCorporaResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Creates an empty `Corpus`.
      operationId: CreateCorpus
      parameters: []
      requestBody:
        description: Required. The `Corpus` to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Corpus'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific `Corpus`.
      operationId: GetCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes a `Corpus`.
      operationId: DeleteCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: force
          in: query
          description: >-
            Optional. If set to true, any `Document`s and objects related to
            this `Corpus` will

            also be deleted.


            If false (the default), a `FAILED_PRECONDITION` error will be
            returned if

            `Corpus` contains any `Document`s.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates a `Corpus`.
      operationId: UpdateCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: |-
            Required. The list of fields to update.
            Currently, this only supports updating `display_name`.
          required: true
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: Required. The `Corpus` to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Corpus'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corpus'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}:query':
    post:
      tags:
        - generativelanguage
      description: Performs semantic search over a `Corpus`.
      operationId: QueryCorpus
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCorpusRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCorpusResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents':
    get:
      tags:
        - generativelanguage
      description: Lists all `Document`s in a `Corpus`.
      operationId: ListDocuments
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: |-
            Optional. The maximum number of `Document`s to return (per page).
            The service may return fewer `Document`s.

            If unspecified, at most 10 `Document`s will be returned.
            The maximum size limit is 20 `Document`s per page.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListDocuments`
            call.


            Provide the `next_page_token` returned in the response as an
            argument to

            the next request to retrieve the next page.


            When paginating, all other parameters provided to `ListDocuments`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentsResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Creates an empty `Document`.
      operationId: CreateDocument
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Required. The `Document` to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific `Document`.
      operationId: GetDocument
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes a `Document`.
      operationId: DeleteDocument
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: force
          in: query
          description: >-
            Optional. If set to true, any `Chunk`s and objects related to this
            `Document` will

            also be deleted.


            If false (the default), a `FAILED_PRECONDITION` error will be
            returned if

            `Document` contains any `Chunk`s.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates a `Document`.
      operationId: UpdateDocument
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: |-
            Required. The list of fields to update.
            Currently, this only supports updating `display_name` and
            `custom_metadata`.
          required: true
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: Required. The `Document` to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}:query':
    post:
      tags:
        - generativelanguage
      description: Performs semantic search over a `Document`.
      operationId: QueryDocument
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDocumentRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDocumentResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}/chunks':
    get:
      tags:
        - generativelanguage
      description: Lists all `Chunk`s in a `Document`.
      operationId: ListChunks
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: pageSize
          in: query
          description: |-
            Optional. The maximum number of `Chunk`s to return (per page).
            The service may return fewer `Chunk`s.

            If unspecified, at most 10 `Chunk`s will be returned.
            The maximum size limit is 100 `Chunk`s per page.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: pageToken
          in: query
          description: >-
            Optional. A page token, received from a previous `ListChunks` call.


            Provide the `next_page_token` returned in the response as an
            argument to

            the next request to retrieve the next page.


            When paginating, all other parameters provided to `ListChunks`

            must match the call that provided the page token.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChunksResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    post:
      tags:
        - generativelanguage
      description: Creates a `Chunk`.
      operationId: CreateChunk
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Required. The `Chunk` to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chunk'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}/chunks:batchCreate':
    post:
      tags:
        - generativelanguage
      description: Batch create `Chunk`s.
      operationId: BatchCreateChunks
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateChunksRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateChunksResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}/chunks/{chunk}':
    get:
      tags:
        - generativelanguage
      description: Gets information about a specific `Chunk`.
      operationId: GetChunk
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: chunk
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    delete:
      tags:
        - generativelanguage
      description: Deletes a `Chunk`.
      operationId: DeleteChunk
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: chunk
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    patch:
      tags:
        - generativelanguage
      description: Updates a `Chunk`.
      operationId: UpdateChunk
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: chunk
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: updateMask
          in: query
          description: |-
            Required. The list of fields to update.
            Currently, this only supports updating `custom_metadata` and `data`.
          required: true
          style: form
          explode: true
          schema:
            pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
            type: string
            format: google-fieldmask
      requestBody:
        description: Required. The `Chunk` to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chunk'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chunk'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}/chunks:batchUpdate':
    post:
      tags:
        - generativelanguage
      description: Batch update `Chunk`s.
      operationId: BatchUpdateChunks
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateChunksRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateChunksResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/corpora/{corpus}/documents/{document}/chunks:batchDelete':
    post:
      tags:
        - generativelanguage
      description: Batch delete `Chunk`s.
      operationId: BatchDeleteChunks
      parameters:
        - name: corpus
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: document
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteChunksRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:generateText':
    post:
      tags:
        - generativelanguage
      description: Generates a response from the model given an input message.
      operationId: GenerateText
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTextRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTextResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/tunedModels/{tunedModel}:generateText':
    post:
      tags:
        - generativelanguage
      description: Generates a response from the model given an input message.
      operationId: GenerateTextByTunedModel
      parameters:
        - name: tunedModel
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTextRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateTextResponse'
      security:
        - default: []
      x-google-operation-name: GenerateText
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:embedText':
    post:
      tags:
        - generativelanguage
      description: Generates an embedding from the model given an input message.
      operationId: EmbedText
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbedTextRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbedTextResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:batchEmbedText':
    post:
      tags:
        - generativelanguage
      description: |-
        Generates multiple embeddings from the model given input text in a
        synchronous call.
      operationId: BatchEmbedText
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEmbedTextRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEmbedTextResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
  '/v1beta/models/{model}:countTextTokens':
    post:
      tags:
        - generativelanguage
      description: Runs a model's tokenizer on a text and returns the token count.
      operationId: CountTextTokens
      parameters:
        - name: model
          in: path
          description: >-
            Resource ID segment making up resource `name`. It identifies the
            resource within its parent collection as described in
            https://google.aip.dev/122.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: The request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountTextTokensRequest'
      responses:
        default:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountTextTokensResponse'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
components:
  schemas:
    ListOperationsResponse:
      type: object
      properties:
        operations:
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
    Status:
      type: object
      properties:
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          type: string
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          type: array
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It
        is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in
        the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
    Empty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the
        request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }
    GenerateContentRequest:
      required:
        - contents
        - model
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. The name of the `Model` to use for generating the
            completion.


            Format: `models/{model}`.
        systemInstruction:
          description: >-
            Optional. Developer set [system

            instruction(s)](https://ai.google.dev/gemini-api/docs/system-instructions).

            Currently, text only.
          allOf:
            - $ref: '#/components/schemas/Content'
        contents:
          type: array
          description: >-
            Required. The content of the current conversation with the model.


            For single-turn queries, this is a single instance. For multi-turn
            queries

            like
            [chat](https://ai.google.dev/gemini-api/docs/text-generation#chat),

            this is a repeated field that contains the conversation history and
            the

            latest request.
          items:
            $ref: '#/components/schemas/Content'
        tools:
          type: array
          description: >-
            Optional. A list of `Tools` the `Model` may use to generate the next
            response.


            A `Tool` is a piece of code that enables the system to interact with

            external systems to perform an action, or set of actions, outside of

            knowledge and scope of the `Model`. Supported `Tool`s are `Function`
            and

            `code_execution`. Refer to the [Function

            calling](https://ai.google.dev/gemini-api/docs/function-calling) and
            the

            [Code
            execution](https://ai.google.dev/gemini-api/docs/code-execution)

            guides to learn more.
          items:
            $ref: '#/components/schemas/Tool'
        toolConfig:
          description: >-
            Optional. Tool configuration for any `Tool` specified in the
            request. Refer to the

            [Function calling

            guide](https://ai.google.dev/gemini-api/docs/function-calling#function_calling_mode)

            for a usage example.
          allOf:
            - $ref: '#/components/schemas/ToolConfig'
        safetySettings:
          type: array
          description: >-
            Optional. A list of unique `SafetySetting` instances for blocking
            unsafe content.


            This will be enforced on the `GenerateContentRequest.contents` and

            `GenerateContentResponse.candidates`. There should not be more than
            one

            setting for each `SafetyCategory` type. The API will block any
            contents and

            responses that fail to meet the thresholds set by these settings.
            This list

            overrides the default settings for each `SafetyCategory` specified
            in the

            safety_settings. If there is no `SafetySetting` for a given

            `SafetyCategory` provided in the list, the API will use the default
            safety

            setting for that category. Harm categories
            HARM_CATEGORY_HATE_SPEECH,

            HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT,

            HARM_CATEGORY_HARASSMENT, HARM_CATEGORY_CIVIC_INTEGRITY are
            supported.

            Refer to the
            [guide](https://ai.google.dev/gemini-api/docs/safety-settings)

            for detailed information on available safety settings. Also refer to
            the

            [Safety
            guidance](https://ai.google.dev/gemini-api/docs/safety-guidance) to

            learn how to incorporate safety considerations in your AI
            applications.
          items:
            $ref: '#/components/schemas/SafetySetting'
        generationConfig:
          description: Optional. Configuration options for model generation and outputs.
          allOf:
            - $ref: '#/components/schemas/GenerationConfig'
        cachedContent:
          type: string
          description: >-
            Optional. The name of the content

            [cached](https://ai.google.dev/gemini-api/docs/caching) to use as
            context

            to serve the prediction. Format: `cachedContents/{cachedContent}`
      description: |-
        Request to generate a completion from the model.
        NEXT ID: 16
    Content:
      type: object
      properties:
        parts:
          type: array
          description: >-
            Ordered `Parts` that constitute a single message. Parts may have
            different

            MIME types.
          items:
            $ref: '#/components/schemas/Part'
        role:
          type: string
          description: >-
            Optional. The producer of the content. Must be either 'user' or
            'model'.


            Useful to set for multi-turn conversations, otherwise can be left
            blank

            or unset.
      description: >-
        The base structured datatype containing multi-part content of a message.


        A `Content` includes a `role` field designating the producer of the
        `Content`

        and a `parts` field containing multi-part data that contains the content
        of

        the message turn.
    Part:
      type: object
      properties:
        text:
          type: string
          description: Inline text.
        inlineData:
          description: Inline media bytes.
          allOf:
            - $ref: '#/components/schemas/Blob'
        functionCall:
          description: |-
            A predicted `FunctionCall` returned from the model that contains
            a string representing the `FunctionDeclaration.name` with the
            arguments and their values.
          allOf:
            - $ref: '#/components/schemas/FunctionCall'
        functionResponse:
          description: |-
            The result output of a `FunctionCall` that contains a string
            representing the `FunctionDeclaration.name` and a structured JSON
            object containing any output from the function is used as context to
            the model.
          allOf:
            - $ref: '#/components/schemas/FunctionResponse'
        fileData:
          description: URI based data.
          allOf:
            - $ref: '#/components/schemas/FileData'
        executableCode:
          description: Code generated by the model that is meant to be executed.
          allOf:
            - $ref: '#/components/schemas/ExecutableCode'
        codeExecutionResult:
          description: Result of executing the `ExecutableCode`.
          allOf:
            - $ref: '#/components/schemas/CodeExecutionResult'
        videoMetadata:
          description: >-
            Optional. Video metadata. The metadata should only be specified
            while the video

            data is presented in inline_data or file_data.
          allOf:
            - $ref: '#/components/schemas/VideoMetadata'
        thought:
          type: boolean
          description: Optional. Indicates if the part is thought from the model.
        thoughtSignature:
          type: string
          description: >-
            Optional. An opaque signature for the thought so it can be reused in
            subsequent

            requests.
          format: byte
      description: >-
        A datatype containing media that is part of a multi-part `Content`
        message.


        A `Part` consists of data which has an associated datatype. A `Part` can
        only

        contain one of the accepted types in `Part.data`.


        A `Part` must have a fixed IANA MIME type identifying the type and
        subtype

        of the media if the `inline_data` field is filled with raw bytes.
    Blob:
      type: object
      properties:
        mimeType:
          type: string
          description: >-
            The IANA standard MIME type of the source data.

            Examples:
              - image/png
              - image/jpeg
            If an unsupported MIME type is provided, an error will be returned.
            For a

            complete list of supported types, see [Supported file

            formats](https://ai.google.dev/gemini-api/docs/prompting_with_media#supported_file_formats).
        data:
          type: string
          description: Raw bytes for media formats.
          format: byte
      description: |-
        Raw media bytes.

        Text should not be sent as raw bytes, use the 'text' field.
    FunctionCall:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          description: >-
            Optional. The unique id of the function call. If populated, the
            client to execute the

            `function_call` and return the response with the matching `id`.
        name:
          type: string
          description: >-
            Required. The name of the function to call.

            Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a
            maximum

            length of 63.
        args:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Optional. The function parameters and values in JSON object format.
      description: |-
        A predicted `FunctionCall` returned from the model that contains
        a string representing the `FunctionDeclaration.name` with the
        arguments and their values.
    FunctionResponse:
      required:
        - name
        - response
      type: object
      properties:
        id:
          type: string
          description: >-
            Optional. The id of the function call this response is for.
            Populated by the client

            to match the corresponding function call `id`.
        name:
          type: string
          description: >-
            Required. The name of the function to call.

            Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a
            maximum

            length of 63.
        response:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Required. The function response in JSON object format.
        willContinue:
          type: boolean
          description: >-
            Optional. Signals that function call continues, and more responses
            will be

            returned, turning the function call into a generator.

            Is only applicable to NON_BLOCKING function calls, is ignored
            otherwise.

            If set to false, future responses will not be considered.

            It is allowed to return empty `response` with `will_continue=False`
            to

            signal that the function call is finished. This may still trigger
            the model

            generation. To avoid triggering the generation and finish the
            function

            call, additionally set `scheduling` to `SILENT`.
        scheduling:
          type: string
          description: >-
            Optional. Specifies how the response should be scheduled in the
            conversation.

            Only applicable to NON_BLOCKING function calls, is ignored
            otherwise.

            Defaults to WHEN_IDLE.
          enum:
            - SCHEDULING_UNSPECIFIED
            - SILENT
            - WHEN_IDLE
            - INTERRUPT
          x-google-enum-descriptions:
            - This value is unused.
            - >-
              Only add the result to the conversation context, do not interrupt
              or

              trigger generation.
            - >-
              Add the result to the conversation context, and prompt to generate
              output

              without interrupting ongoing generation.
            - >-
              Add the result to the conversation context, interrupt ongoing
              generation

              and prompt to generate output.
      description: |-
        The result output from a `FunctionCall` that contains a string
        representing the `FunctionDeclaration.name` and a structured JSON
        object containing any output from the function is used as context to
        the model. This should contain the result of a`FunctionCall` made
        based on model prediction.
    FileData:
      required:
        - fileUri
      type: object
      properties:
        mimeType:
          type: string
          description: Optional. The IANA standard MIME type of the source data.
        fileUri:
          type: string
          description: Required. URI.
      description: URI based data.
    ExecutableCode:
      required:
        - code
        - language
      type: object
      properties:
        language:
          type: string
          description: Required. Programming language of the `code`.
          enum:
            - LANGUAGE_UNSPECIFIED
            - PYTHON
          x-google-enum-descriptions:
            - Unspecified language. This value should not be used.
            - 'Python >= 3.10, with numpy and simpy available.'
        code:
          type: string
          description: Required. The code to be executed.
      description: >-
        Code generated by the model that is meant to be executed, and the result

        returned to the model.


        Only generated when using the `CodeExecution` tool, in which the code
        will

        be automatically executed, and a corresponding `CodeExecutionResult`
        will

        also be generated.
    CodeExecutionResult:
      required:
        - outcome
      type: object
      properties:
        outcome:
          type: string
          description: Required. Outcome of the code execution.
          enum:
            - OUTCOME_UNSPECIFIED
            - OUTCOME_OK
            - OUTCOME_FAILED
            - OUTCOME_DEADLINE_EXCEEDED
          x-google-enum-descriptions:
            - Unspecified status. This value should not be used.
            - Code execution completed successfully.
            - >-
              Code execution finished but with a failure. `stderr` should
              contain the

              reason.
            - >-
              Code execution ran for too long, and was cancelled. There may or
              may not

              be a partial output present.
        output:
          type: string
          description: >-
            Optional. Contains stdout when code execution is successful, stderr
            or other

            description otherwise.
      description: >-
        Result of executing the `ExecutableCode`.


        Only generated when using the `CodeExecution`, and always follows a
        `part`

        containing the `ExecutableCode`.
    VideoMetadata:
      type: object
      properties:
        startOffset:
          type: string
          description: Optional. The start offset of the video.
          format: google-duration
        endOffset:
          type: string
          description: Optional. The end offset of the video.
          format: google-duration
        fps:
          type: number
          description: >-
            Optional. The frame rate of the video sent to the model. If not
            specified, the

            default value will be 1.0.

            The fps range is (0.0, 24.0].
          format: double
      description: Metadata describes the input video content.
    Tool:
      type: object
      properties:
        functionDeclarations:
          type: array
          description: >-
            Optional. A list of `FunctionDeclarations` available to the model
            that can be used

            for function calling.


            The model or system does not execute the function. Instead the
            defined

            function may be returned as a FunctionCall

            with arguments to the client side for execution. The model may
            decide to

            call a subset of these functions by populating

            FunctionCall in the response. The next

            conversation turn may contain a

            FunctionResponse

            with the Content.role "function" generation context for the next
            model

            turn.
          items:
            $ref: '#/components/schemas/FunctionDeclaration'
        googleSearchRetrieval:
          description: Optional. Retrieval tool that is powered by Google search.
          allOf:
            - $ref: '#/components/schemas/GoogleSearchRetrieval'
        codeExecution:
          description: Optional. Enables the model to execute code as part of generation.
          allOf:
            - $ref: '#/components/schemas/CodeExecution'
        googleSearch:
          description: |-
            Optional. GoogleSearch tool type.
            Tool to support Google Search in Model. Powered by Google.
          allOf:
            - $ref: '#/components/schemas/GoogleSearch'
        urlContext:
          description: Optional. Tool to support URL context retrieval.
          allOf:
            - $ref: '#/components/schemas/UrlContext'
      description: |-
        Tool details that the model may use to generate response.

        A `Tool` is a piece of code that enables the system to interact with
        external systems to perform an action, or set of actions, outside of
        knowledge and scope of the model.

        Next ID: 11
    FunctionDeclaration:
      required:
        - description
        - name
      type: object
      properties:
        name:
          type: string
          description: >-
            Required. The name of the function.

            Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a
            maximum

            length of 63.
        description:
          type: string
          description: Required. A brief description of the function.
        parameters:
          description: >-
            Optional. Describes the parameters to this function. Reflects the
            Open API 3.03

            Parameter Object string Key: the name of the parameter. Parameter
            names are

            case sensitive. Schema Value: the Schema defining the type used for
            the

            parameter.
          allOf:
            - $ref: '#/components/schemas/Schema'
        parametersJsonSchema:
          description: >-
            Optional. Describes the parameters to the function in JSON Schema
            format. The schema

            must describe an object where the properties are the parameters to
            the

            function. For example:


            ```

            {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "age": { "type": "integer" }
              },
              "additionalProperties": false,
              "required": ["name", "age"],
              "propertyOrdering": ["name", "age"]
            }

            ```


            This field is mutually exclusive with `parameters`.
        response:
          description: >-
            Optional. Describes the output from this function in JSON Schema
            format. Reflects the

            Open API 3.03 Response Object. The Schema defines the type used for
            the

            response value of the function.
          allOf:
            - $ref: '#/components/schemas/Schema'
        responseJsonSchema:
          description: >-
            Optional. Describes the output from this function in JSON Schema
            format. The value

            specified by the schema is the response value of the function.


            This field is mutually exclusive with `response`.
        behavior:
          type: string
          description: |-
            Optional. Specifies the function Behavior.
            Currently only supported by the BidiGenerateContent method.
          enum:
            - UNSPECIFIED
            - BLOCKING
            - NON_BLOCKING
          x-google-enum-descriptions:
            - This value is unused.
            - >-
              If set, the system will wait to receive the function response
              before

              continuing the conversation.
            - >-
              If set, the system will not wait to receive the function response.

              Instead, it will attempt to handle function responses as they
              become

              available while maintaining the conversation between the user and
              the

              model.
      description: >-
        Structured representation of a function declaration as defined by the

        [OpenAPI 3.03 specification](https://spec.openapis.org/oas/v3.0.3).
        Included

        in this declaration are the function name and parameters. This

        FunctionDeclaration is a representation of a block of code that can be
        used

        as a `Tool` by the model and executed by the client.
    Schema:
      required:
        - type
      type: object
      properties:
        type:
          description: Required. Data type.
          allOf:
            - $ref: '#/components/schemas/Type'
        format:
          type: string
          description: >-
            Optional. The format of the data. Any value is allowed, but most do
            not trigger any

            special functionality.
        title:
          type: string
          description: Optional. The title of the schema.
        description:
          type: string
          description: >-
            Optional. A brief description of the parameter. This could contain
            examples of use.

            Parameter description may be formatted as Markdown.
        nullable:
          type: boolean
          description: Optional. Indicates if the value may be null.
        enum:
          type: array
          description: >-
            Optional. Possible values of the element of Type.STRING with enum
            format.

            For example we can define an Enum Direction as :

            {type:STRING, format:enum, enum:["EAST", NORTH", "SOUTH", "WEST"]}
          items:
            type: string
        items:
          description: Optional. Schema of the elements of Type.ARRAY.
          allOf:
            - $ref: '#/components/schemas/Schema'
        maxItems:
          type: string
          description: Optional. Maximum number of the elements for Type.ARRAY.
          format: int64
        minItems:
          type: string
          description: Optional. Minimum number of the elements for Type.ARRAY.
          format: int64
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Schema'
          description: Optional. Properties of Type.OBJECT.
        required:
          type: array
          description: Optional. Required properties of Type.OBJECT.
          items:
            type: string
        minProperties:
          type: string
          description: Optional. Minimum number of the properties for Type.OBJECT.
          format: int64
        maxProperties:
          type: string
          description: Optional. Maximum number of the properties for Type.OBJECT.
          format: int64
        minimum:
          type: number
          description: |-
            Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER
            Minimum value of the Type.INTEGER and Type.NUMBER
          format: double
        maximum:
          type: number
          description: Optional. Maximum value of the Type.INTEGER and Type.NUMBER
          format: double
        minLength:
          type: string
          description: |-
            Optional. SCHEMA FIELDS FOR TYPE STRING
            Minimum length of the Type.STRING
          format: int64
        maxLength:
          type: string
          description: Optional. Maximum length of the Type.STRING
          format: int64
        pattern:
          type: string
          description: >-
            Optional. Pattern of the Type.STRING to restrict a string to a
            regular expression.
        example:
          description: >-
            Optional. Example of the object. Will only populated when the object
            is the root.
        anyOf:
          type: array
          description: >-
            Optional. The value should be validated against any (one or more) of
            the subschemas

            in the list.
          items:
            $ref: '#/components/schemas/Schema'
        propertyOrdering:
          type: array
          description: >-
            Optional. The order of the properties.

            Not a standard field in open api spec. Used to determine the order
            of the

            properties in the response.
          items:
            type: string
        default:
          description: >-
            Optional. Default value of the field. Per JSON Schema, this field is
            intended for

            documentation generators and doesn't affect validation. Thus it's
            included

            here and ignored so that developers who send schemas with a
            `default` field

            don't get unknown-field errors.
      description: >-
        The `Schema` object allows the definition of input and output data
        types.

        These types can be objects, but also primitives and arrays.

        Represents a select subset of an [OpenAPI 3.0 schema

        object](https://spec.openapis.org/oas/v3.0.3#schema).
    GoogleSearchRetrieval:
      type: object
      properties:
        dynamicRetrievalConfig:
          description: Specifies the dynamic retrieval configuration for the given source.
          allOf:
            - $ref: '#/components/schemas/DynamicRetrievalConfig'
      description: 'Tool to retrieve public web data for grounding, powered by Google.'
    DynamicRetrievalConfig:
      type: object
      properties:
        mode:
          type: string
          description: The mode of the predictor to be used in dynamic retrieval.
          enum:
            - MODE_UNSPECIFIED
            - MODE_DYNAMIC
          x-google-enum-descriptions:
            - Always trigger retrieval.
            - Run retrieval only when system decides it is necessary.
        dynamicThreshold:
          type: number
          description: |-
            The threshold to be used in dynamic retrieval.
            If not set, a system default value is used.
          format: float
      description: Describes the options to customize dynamic retrieval.
    CodeExecution:
      type: object
      description: >-
        Tool that executes code generated by the model, and automatically
        returns

        the result to the model.


        See also `ExecutableCode` and `CodeExecutionResult` which are only
        generated

        when using this tool.
    GoogleSearch:
      type: object
      properties:
        timeRangeFilter:
          description: |-
            Optional. Filter search results to a specific time range.
            If customers set a start time, they must set an end time (and vice
            versa).
          allOf:
            - $ref: '#/components/schemas/Interval'
      description: |-
        GoogleSearch tool type.
        Tool to support Google Search in Model. Powered by Google.
    Interval:
      type: object
      properties:
        startTime:
          type: string
          description: >-
            Optional. Inclusive start of the interval.


            If specified, a Timestamp matching this interval will have to be the
            same

            or after the start.
          format: date-time
        endTime:
          type: string
          description: >-
            Optional. Exclusive end of the interval.


            If specified, a Timestamp matching this interval will have to be
            before the

            end.
          format: date-time
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a

        Timestamp end (exclusive).


        The start must be less than or equal to the end.

        When the start equals the end, the interval is empty (matches no time).

        When both start and end are unspecified, the interval matches any time.
    UrlContext:
      type: object
      description: Tool to support URL context retrieval.
    ToolConfig:
      type: object
      properties:
        functionCallingConfig:
          description: Optional. Function calling config.
          allOf:
            - $ref: '#/components/schemas/FunctionCallingConfig'
      description: |-
        The Tool configuration containing parameters for specifying `Tool` use
        in the request.
    FunctionCallingConfig:
      type: object
      properties:
        mode:
          type: string
          description: >-
            Optional. Specifies the mode in which function calling should
            execute. If

            unspecified, the default value will be set to AUTO.
          enum:
            - MODE_UNSPECIFIED
            - AUTO
            - ANY
            - NONE
            - VALIDATED
          x-google-enum-descriptions:
            - Unspecified function calling mode. This value should not be used.
            - >-
              Default model behavior, model decides to predict either a function
              call

              or a natural language response.
            - >-
              Model is constrained to always predicting a function call only.

              If "allowed_function_names" are set, the predicted function call
              will be

              limited to any one of "allowed_function_names", else the predicted

              function call will be any one of the provided
              "function_declarations".
            - >-
              Model will not predict any function call. Model behavior is same
              as when

              not passing any function declarations.
            - >-
              Model decides to predict either a function call

              or a natural language response, but will validate function calls
              with

              constrained decoding.

              If "allowed_function_names" are set, the predicted function call
              will be

              limited to any one of "allowed_function_names", else the predicted

              function call will be any one of the provided
              "function_declarations".
        allowedFunctionNames:
          type: array
          description: >-
            Optional. A set of function names that, when provided, limits the
            functions the model

            will call.


            This should only be set when the Mode is ANY or VALIDATED. Function
            names

            should match [FunctionDeclaration.name]. When set, model will

            predict a function call from only allowed function names.
          items:
            type: string
      description: Configuration for specifying function calling behavior.
    SafetySetting:
      required:
        - category
        - threshold
      type: object
      properties:
        category:
          description: Required. The category for this setting.
          allOf:
            - $ref: '#/components/schemas/HarmCategory'
        threshold:
          type: string
          description: >-
            Required. Controls the probability threshold at which harm is
            blocked.
          enum:
            - HARM_BLOCK_THRESHOLD_UNSPECIFIED
            - BLOCK_LOW_AND_ABOVE
            - BLOCK_MEDIUM_AND_ABOVE
            - BLOCK_ONLY_HIGH
            - BLOCK_NONE
            - 'OFF'
          x-google-enum-descriptions:
            - Threshold is unspecified.
            - Content with NEGLIGIBLE will be allowed.
            - Content with NEGLIGIBLE and LOW will be allowed.
            - 'Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.'
            - All content will be allowed.
            - Turn off the safety filter.
      description: >-
        Safety setting, affecting the safety-blocking behavior.


        Passing a safety setting for a category changes the allowed probability
        that

        content is blocked.
    GenerationConfig:
      type: object
      properties:
        candidateCount:
          type: integer
          description: >-
            Optional. Number of generated responses to return. If unset, this
            will default

            to 1. Please note that this doesn't work for previous generation

            models (Gemini 1.0 family)
          format: int32
        stopSequences:
          type: array
          description: >-
            Optional. The set of character sequences (up to 5) that will stop
            output generation.

            If specified, the API will stop at the first appearance of a

            `stop_sequence`. The stop sequence will not be included as part of
            the

            response.
          items:
            type: string
        maxOutputTokens:
          type: integer
          description: >-
            Optional. The maximum number of tokens to include in a response
            candidate.


            Note: The default value varies by model, see the
            `Model.output_token_limit`

            attribute of the `Model` returned from the `getModel` function.
          format: int32
        temperature:
          type: number
          description: |-
            Optional. Controls the randomness of the output.

            Note: The default value varies by model, see the `Model.temperature`
            attribute of the `Model` returned from the `getModel` function.

            Values can range from [0.0, 2.0].
          format: float
        topP:
          type: number
          description: >-
            Optional. The maximum cumulative probability of tokens to consider
            when sampling.


            The model uses combined Top-k and Top-p (nucleus) sampling.


            Tokens are sorted based on their assigned probabilities so that only
            the

            most likely tokens are considered. Top-k sampling directly limits
            the

            maximum number of tokens to consider, while Nucleus sampling limits
            the

            number of tokens based on the cumulative probability.


            Note: The default value varies by `Model` and is specified by

            the`Model.top_p` attribute returned from the `getModel` function. An
            empty

            `top_k` attribute indicates that the model doesn't apply top-k
            sampling

            and doesn't allow setting `top_k` on requests.
          format: float
        topK:
          type: integer
          description: >-
            Optional. The maximum number of tokens to consider when sampling.


            Gemini models use Top-p (nucleus) sampling or a combination of Top-k
            and

            nucleus sampling. Top-k sampling considers the set of `top_k` most
            probable

            tokens. Models running with nucleus sampling don't allow top_k
            setting.


            Note: The default value varies by `Model` and is specified by

            the`Model.top_p` attribute returned from the `getModel` function. An
            empty

            `top_k` attribute indicates that the model doesn't apply top-k
            sampling

            and doesn't allow setting `top_k` on requests.
          format: int32
        seed:
          type: integer
          description: >-
            Optional. Seed used in decoding. If not set, the request uses a
            randomly generated

            seed.
          format: int32
        responseMimeType:
          type: string
          description: >-
            Optional. MIME type of the generated candidate text.

            Supported MIME types are:

            `text/plain`: (default) Text output.

            `application/json`: JSON response in the response candidates.

            `text/x.enum`: ENUM as a string response in the response candidates.

            Refer to the

            [docs](https://ai.google.dev/gemini-api/docs/prompting_with_media#plain_text_formats)

            for a list of all supported text MIME types.
        responseSchema:
          description: >-
            Optional. Output schema of the generated candidate text. Schemas
            must be a

            subset of the [OpenAPI
            schema](https://spec.openapis.org/oas/v3.0.3#schema)

            and can be objects, primitives or arrays.


            If set, a compatible `response_mime_type` must also be set.

            Compatible MIME types:

            `application/json`: Schema for JSON response.

            Refer to the [JSON text generation

            guide](https://ai.google.dev/gemini-api/docs/json-mode) for more
            details.
          allOf:
            - $ref: '#/components/schemas/Schema'
        responseJsonSchema:
          description: >-
            Optional. Output schema of the generated response. This is an
            alternative to

            `response_schema` that accepts [JSON
            Schema](https://json-schema.org/).


            If set, `response_schema` must be omitted, but `response_mime_type`
            is

            required.


            While the full JSON Schema may be sent, not all features are
            supported.

            Specifically, only the following properties are supported:


            - `$id`

            - `$defs`

            - `$ref`

            - `$anchor`

            - `type`

            - `format`

            - `title`

            - `description`

            - `enum` (for strings and numbers)

            - `items`

            - `prefixItems`

            - `minItems`

            - `maxItems`

            - `minimum`

            - `maximum`

            - `anyOf`

            - `oneOf` (interpreted the same as `anyOf`)

            - `properties`

            - `additionalProperties`

            - `required`


            The non-standard `propertyOrdering` property may also be set.


            Cyclic references are unrolled to a limited degree and, as such, may
            only

            be used within non-required properties. (Nullable properties are not

            sufficient.) If `$ref` is set on a sub-schema, no other properties,
            except

            for than those starting as a `$`, may be set.
        presencePenalty:
          type: number
          description: >-
            Optional. Presence penalty applied to the next token's logprobs if
            the token has

            already been seen in the response.


            This penalty is binary on/off and not dependant on the number of
            times the

            token is used (after the first). Use

            frequency_penalty

            for a penalty that increases with each use.


            A positive penalty will discourage the use of tokens that have
            already

            been used in the response, increasing the vocabulary.


            A negative penalty will encourage the use of tokens that have
            already been

            used in the response, decreasing the vocabulary.
          format: float
        frequencyPenalty:
          type: number
          description: >-
            Optional. Frequency penalty applied to the next token's logprobs,
            multiplied by the

            number of times each token has been seen in the respponse so far.


            A positive penalty will discourage the use of tokens that have
            already

            been used, proportional to the number of times the token has been
            used:

            The more a token is used, the more difficult it is for the model to
            use

            that token again increasing the vocabulary of responses.


            Caution: A _negative_ penalty will encourage the model to reuse
            tokens

            proportional to the number of times the token has been used. Small

            negative values will reduce the vocabulary of a response. Larger
            negative

            values will cause the model to start repeating a common token  until
            it

            hits the max_output_tokens

            limit.
          format: float
        responseLogprobs:
          type: boolean
          description: 'Optional. If true, export the logprobs results in response.'
        logprobs:
          type: integer
          description: >-
            Optional. Only valid if response_logprobs=True.

            This sets the number of top logprobs to return at each decoding step
            in the

            Candidate.logprobs_result. The number must be in the range of [0,
            20].
          format: int32
        enableEnhancedCivicAnswers:
          type: boolean
          description: >-
            Optional. Enables enhanced civic answers. It may not be available
            for all models.
        responseModalities:
          type: array
          description: >-
            Optional. The requested modalities of the response. Represents the
            set of modalities

            that the model can return, and should be expected in the response.
            This is

            an exact match to the modalities of the response.


            A model may have multiple combinations of supported modalities. If
            the

            requested modalities do not match any of the supported combinations,
            an

            error will be returned.


            An empty list is equivalent to requesting only text.
          items:
            type: string
            enum:
              - MODALITY_UNSPECIFIED
              - TEXT
              - IMAGE
              - AUDIO
            x-google-enum-descriptions:
              - Default value.
              - Indicates the model should return text.
              - Indicates the model should return images.
              - Indicates the model should return audio.
        speechConfig:
          description: Optional. The speech generation config.
          allOf:
            - $ref: '#/components/schemas/SpeechConfig'
        thinkingConfig:
          description: |-
            Optional. Config for thinking features.
            An error will be returned if this field is set for models that don't
            support thinking.
          allOf:
            - $ref: '#/components/schemas/ThinkingConfig'
        mediaResolution:
          type: string
          description: 'Optional. If specified, the media resolution specified will be used.'
          enum:
            - MEDIA_RESOLUTION_UNSPECIFIED
            - MEDIA_RESOLUTION_LOW
            - MEDIA_RESOLUTION_MEDIUM
            - MEDIA_RESOLUTION_HIGH
          x-google-enum-descriptions:
            - Media resolution has not been set.
            - Media resolution set to low (64 tokens).
            - Media resolution set to medium (256 tokens).
            - Media resolution set to high (zoomed reframing with 256 tokens).
      description: >-
        Configuration options for model generation and outputs. Not all
        parameters

        are configurable for every model.
    SpeechConfig:
      type: object
      properties:
        voiceConfig:
          description: The configuration in case of single-voice output.
          allOf:
            - $ref: '#/components/schemas/VoiceConfig'
        multiSpeakerVoiceConfig:
          description: |-
            Optional. The configuration for the multi-speaker setup.
            It is mutually exclusive with the voice_config field.
          allOf:
            - $ref: '#/components/schemas/MultiSpeakerVoiceConfig'
        languageCode:
          type: string
          description: >-
            Optional. Language code (in BCP 47 format, e.g. "en-US") for speech
            synthesis.


            Valid values are: de-DE, en-AU, en-GB, en-IN, en-US, es-US, fr-FR,
            hi-IN,

            pt-BR, ar-XA, es-ES, fr-CA, id-ID, it-IT, ja-JP, tr-TR, vi-VN,
            bn-IN,

            gu-IN, kn-IN, ml-IN, mr-IN, ta-IN, te-IN, nl-NL, ko-KR, cmn-CN,
            pl-PL,

            ru-RU, and th-TH.
      description: The speech generation config.
    VoiceConfig:
      type: object
      properties:
        prebuiltVoiceConfig:
          description: The configuration for the prebuilt voice to use.
          allOf:
            - $ref: '#/components/schemas/PrebuiltVoiceConfig'
      description: The configuration for the voice to use.
    PrebuiltVoiceConfig:
      type: object
      properties:
        voiceName:
          type: string
          description: The name of the preset voice to use.
      description: The configuration for the prebuilt speaker to use.
    MultiSpeakerVoiceConfig:
      required:
        - speakerVoiceConfigs
      type: object
      properties:
        speakerVoiceConfigs:
          type: array
          description: Required. All the enabled speaker voices.
          items:
            $ref: '#/components/schemas/SpeakerVoiceConfig'
      description: The configuration for the multi-speaker setup.
    SpeakerVoiceConfig:
      required:
        - speaker
        - voiceConfig
      type: object
      properties:
        speaker:
          type: string
          description: >-
            Required. The name of the speaker to use. Should be the same as in
            the prompt.
        voiceConfig:
          description: Required. The configuration for the voice to use.
          allOf:
            - $ref: '#/components/schemas/VoiceConfig'
      description: The configuration for a single speaker in a multi speaker setup.
    ThinkingConfig:
      type: object
      properties:
        includeThoughts:
          type: boolean
          description: |-
            Indicates whether to include thoughts in the response.
            If true, thoughts are returned only when available.
        thinkingBudget:
          type: integer
          description: The number of thoughts tokens that the model should generate.
          format: int32
      description: Config for thinking features.
    GenerateContentResponse:
      type: object
      properties:
        candidates:
          type: array
          description: Candidate responses from the model.
          items:
            $ref: '#/components/schemas/Candidate'
        promptFeedback:
          description: Returns the prompt's feedback related to the content filters.
          allOf:
            - $ref: '#/components/schemas/PromptFeedback'
        usageMetadata:
          description: Output only. Metadata on the generation requests' token usage.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UsageMetadata'
        modelVersion:
          type: string
          description: Output only. The model version used to generate the response.
          readOnly: true
        responseId:
          type: string
          description: Output only. response_id is used to identify each response.
          readOnly: true
      description: >-
        Response from the model supporting multiple candidate responses.


        Safety ratings and content filtering are reported for both

        prompt in `GenerateContentResponse.prompt_feedback` and for each
        candidate

        in `finish_reason` and in `safety_ratings`. The API:
         - Returns either all requested candidates or none of them
         - Returns no candidates at all only if there was something wrong with the
           prompt (check `prompt_feedback`)
         - Reports feedback on each candidate in `finish_reason` and
           `safety_ratings`.
    Candidate:
      type: object
      properties:
        index:
          type: integer
          description: >-
            Output only. Index of the candidate in the list of response
            candidates.
          format: int32
          readOnly: true
        content:
          description: Output only. Generated content returned from the model.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Content'
        finishReason:
          type: string
          description: >-
            Optional. Output only. The reason why the model stopped generating
            tokens.


            If empty, the model has not stopped generating tokens.
          readOnly: true
          enum:
            - FINISH_REASON_UNSPECIFIED
            - STOP
            - MAX_TOKENS
            - SAFETY
            - RECITATION
            - LANGUAGE
            - OTHER
            - BLOCKLIST
            - PROHIBITED_CONTENT
            - SPII
            - MALFORMED_FUNCTION_CALL
            - IMAGE_SAFETY
            - UNEXPECTED_TOOL_CALL
            - TOO_MANY_TOOL_CALLS
          x-google-enum-descriptions:
            - Default value. This value is unused.
            - Natural stop point of the model or provided stop sequence.
            - >-
              The maximum number of tokens as specified in the request was
              reached.
            - The response candidate content was flagged for safety reasons.
            - The response candidate content was flagged for recitation reasons.
            - >-
              The response candidate content was flagged for using an
              unsupported

              language.
            - Unknown reason.
            - >-
              Token generation stopped because the content contains forbidden
              terms.
            - >-
              Token generation stopped for potentially containing prohibited
              content.
            - |-
              Token generation stopped because the content potentially contains
              Sensitive Personally Identifiable Information (SPII).
            - The function call generated by the model is invalid.
            - |-
              Token generation stopped because generated images contain safety
              violations.
            - >-
              Model generated a tool call but no tools were enabled in the
              request.
            - |-
              Model called too many tools consecutively, thus the system exited
              execution.
        safetyRatings:
          type: array
          description: |-
            List of ratings for the safety of a response candidate.

            There is at most one rating per category.
          items:
            $ref: '#/components/schemas/SafetyRating'
        citationMetadata:
          description: >-
            Output only. Citation information for model-generated candidate.


            This field may be populated with recitation information for any text

            included in the `content`. These are passages that are "recited"
            from

            copyrighted material in the foundational LLM's training data.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/CitationMetadata'
        tokenCount:
          type: integer
          description: Output only. Token count for this candidate.
          format: int32
          readOnly: true
        groundingAttributions:
          type: array
          description: >-
            Output only. Attribution information for sources that contributed to
            a grounded answer.


            This field is populated for `GenerateAnswer` calls.
          readOnly: true
          items:
            $ref: '#/components/schemas/GroundingAttribution'
        groundingMetadata:
          description: |-
            Output only. Grounding metadata for the candidate.

            This field is populated for `GenerateContent` calls.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/GroundingMetadata'
        avgLogprobs:
          type: number
          description: Output only. Average log probability score of the candidate.
          format: double
          readOnly: true
        logprobsResult:
          description: >-
            Output only. Log-likelihood scores for the response tokens and top
            tokens
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/LogprobsResult'
        urlContextMetadata:
          description: Output only. Metadata related to url context retrieval tool.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/UrlContextMetadata'
      description: A response candidate generated from the model.
    SafetyRating:
      required:
        - category
        - probability
      type: object
      properties:
        category:
          description: Required. The category for this rating.
          allOf:
            - $ref: '#/components/schemas/HarmCategory'
        probability:
          type: string
          description: Required. The probability of harm for this content.
          enum:
            - HARM_PROBABILITY_UNSPECIFIED
            - NEGLIGIBLE
            - LOW
            - MEDIUM
            - HIGH
          x-google-enum-descriptions:
            - Probability is unspecified.
            - Content has a negligible chance of being unsafe.
            - Content has a low chance of being unsafe.
            - Content has a medium chance of being unsafe.
            - Content has a high chance of being unsafe.
        blocked:
          type: boolean
          description: Was this content blocked because of this rating?
      description: >-
        Safety rating for a piece of content.


        The safety rating contains the category of harm and the

        harm probability level in that category for a piece of content.

        Content is classified for safety across a number of

        harm categories and the probability of the harm classification is
        included

        here.
    CitationMetadata:
      type: object
      properties:
        citationSources:
          type: array
          description: Citations to sources for a specific response.
          items:
            $ref: '#/components/schemas/CitationSource'
      description: A collection of source attributions for a piece of content.
    CitationSource:
      type: object
      properties:
        startIndex:
          type: integer
          description: >-
            Optional. Start of segment of the response that is attributed to
            this source.


            Index indicates the start of the segment, measured in bytes.
          format: int32
        endIndex:
          type: integer
          description: 'Optional. End of the attributed segment, exclusive.'
          format: int32
        uri:
          type: string
          description: >-
            Optional. URI that is attributed as a source for a portion of the
            text.
        license:
          type: string
          description: >-
            Optional. License for the GitHub project that is attributed as a
            source for segment.


            License info is required for code citations.
      description: A citation to a source for a portion of a specific response.
    GroundingAttribution:
      type: object
      properties:
        sourceId:
          description: >-
            Output only. Identifier for the source contributing to this
            attribution.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AttributionSourceId'
        content:
          description: Grounding source content that makes up this attribution.
          allOf:
            - $ref: '#/components/schemas/Content'
      description: Attribution for a source that contributed to an answer.
    AttributionSourceId:
      type: object
      properties:
        groundingPassage:
          description: Identifier for an inline passage.
          allOf:
            - $ref: '#/components/schemas/GroundingPassageId'
        semanticRetrieverChunk:
          description: Identifier for a `Chunk` fetched via Semantic Retriever.
          allOf:
            - $ref: '#/components/schemas/SemanticRetrieverChunk'
      description: Identifier for the source contributing to this attribution.
    GroundingPassageId:
      type: object
      properties:
        passageId:
          type: string
          description: >-
            Output only. ID of the passage matching the
            `GenerateAnswerRequest`'s

            `GroundingPassage.id`.
          readOnly: true
        partIndex:
          type: integer
          description: |-
            Output only. Index of the part within the `GenerateAnswerRequest`'s
            `GroundingPassage.content`.
          format: int32
          readOnly: true
      description: Identifier for a part within a `GroundingPassage`.
    SemanticRetrieverChunk:
      type: object
      properties:
        source:
          type: string
          description: |-
            Output only. Name of the source matching the request's
            `SemanticRetrieverConfig.source`. Example: `corpora/123` or
            `corpora/123/documents/abc`
          readOnly: true
        chunk:
          type: string
          description: |-
            Output only. Name of the `Chunk` containing the attributed text.
            Example: `corpora/123/documents/abc/chunks/xyz`
          readOnly: true
      description: >-
        Identifier for a `Chunk` retrieved via Semantic Retriever specified in
        the

        `GenerateAnswerRequest` using `SemanticRetrieverConfig`.
    GroundingMetadata:
      type: object
      properties:
        searchEntryPoint:
          description: Optional. Google search entry for the following-up web searches.
          allOf:
            - $ref: '#/components/schemas/SearchEntryPoint'
        groundingChunks:
          type: array
          description: >-
            List of supporting references retrieved from specified grounding
            source.
          items:
            $ref: '#/components/schemas/GroundingChunk'
        groundingSupports:
          type: array
          description: List of grounding support.
          items:
            $ref: '#/components/schemas/GroundingSupport'
        retrievalMetadata:
          description: Metadata related to retrieval in the grounding flow.
          allOf:
            - $ref: '#/components/schemas/RetrievalMetadata'
        webSearchQueries:
          type: array
          description: Web search queries for the following-up web search.
          items:
            type: string
      description: Metadata returned to client when grounding is enabled.
    SearchEntryPoint:
      type: object
      properties:
        renderedContent:
          type: string
          description: >-
            Optional. Web content snippet that can be embedded in a web page or
            an app webview.
        sdkBlob:
          type: string
          description: Optional. Base64 encoded JSON representing array of  tuple.
          format: byte
      description: Google search entry point.
    GroundingChunk:
      type: object
      properties:
        web:
          description: Grounding chunk from the web.
          allOf:
            - $ref: '#/components/schemas/Web'
      description: Grounding chunk.
    Web:
      type: object
      properties:
        uri:
          type: string
          description: URI reference of the chunk.
        title:
          type: string
          description: Title of the chunk.
      description: Chunk from the web.
    GroundingSupport:
      type: object
      properties:
        segment:
          description: Segment of the content this support belongs to.
          allOf:
            - $ref: '#/components/schemas/Segment'
        groundingChunkIndices:
          type: array
          description: >-
            A list of indices (into 'grounding_chunk') specifying the

            citations associated with the claim. For instance [1,3,4] means

            that grounding_chunk[1], grounding_chunk[3],

            grounding_chunk[4] are the retrieved content attributed to the
            claim.
          items:
            type: integer
            format: int32
        confidenceScores:
          type: array
          description: >-
            Confidence score of the support references. Ranges from 0 to 1. 1 is
            the

            most confident. This list must have the same size as the

            grounding_chunk_indices.
          items:
            type: number
            format: float
      description: Grounding support.
    Segment:
      type: object
      properties:
        partIndex:
          type: integer
          description: >-
            Output only. The index of a Part object within its parent Content
            object.
          format: int32
          readOnly: true
        startIndex:
          type: integer
          description: >-
            Output only. Start index in the given Part, measured in bytes.
            Offset from the start of

            the Part, inclusive, starting at zero.
          format: int32
          readOnly: true
        endIndex:
          type: integer
          description: >-
            Output only. End index in the given Part, measured in bytes. Offset
            from the start of

            the Part, exclusive, starting at zero.
          format: int32
          readOnly: true
        text:
          type: string
          description: >-
            Output only. The text corresponding to the segment from the
            response.
          readOnly: true
      description: Segment of the content.
    RetrievalMetadata:
      type: object
      properties:
        googleSearchDynamicRetrievalScore:
          type: number
          description: >-
            Optional. Score indicating how likely information from google search
            could help

            answer the prompt. The score is in the range [0, 1], where 0 is the
            least

            likely and 1 is the most likely. This score is only populated when

            google search grounding and dynamic retrieval is enabled. It will be

            compared to the threshold to determine whether to trigger google
            search.
          format: float
      description: Metadata related to retrieval in the grounding flow.
    LogprobsResult:
      type: object
      properties:
        topCandidates:
          type: array
          description: Length = total number of decoding steps.
          items:
            $ref: '#/components/schemas/TopCandidates'
        chosenCandidates:
          type: array
          description: |-
            Length = total number of decoding steps.
            The chosen candidates may or may not be in top_candidates.
          items:
            $ref: '#/components/schemas/LogprobsResultCandidate'
      description: Logprobs Result
    TopCandidates:
      type: object
      properties:
        candidates:
          type: array
          description: Sorted by log probability in descending order.
          items:
            $ref: '#/components/schemas/LogprobsResultCandidate'
      description: Candidates with top log probabilities at each decoding step.
    LogprobsResultCandidate:
      type: object
      properties:
        token:
          type: string
          description: The candidate’s token string value.
        tokenId:
          type: integer
          description: The candidate’s token id value.
          format: int32
        logProbability:
          type: number
          description: The candidate's log probability.
          format: float
      description: Candidate for the logprobs token and score.
    UrlContextMetadata:
      type: object
      properties:
        urlMetadata:
          type: array
          description: List of url context.
          items:
            $ref: '#/components/schemas/UrlMetadata'
      description: Metadata related to url context retrieval tool.
    UrlMetadata:
      type: object
      properties:
        retrievedUrl:
          type: string
          description: Retrieved url by the tool.
        urlRetrievalStatus:
          type: string
          description: Status of the url retrieval.
          enum:
            - URL_RETRIEVAL_STATUS_UNSPECIFIED
            - URL_RETRIEVAL_STATUS_SUCCESS
            - URL_RETRIEVAL_STATUS_ERROR
            - URL_RETRIEVAL_STATUS_PAYWALL
            - URL_RETRIEVAL_STATUS_UNSAFE
          x-google-enum-descriptions:
            - Default value. This value is unused.
            - Url retrieval is successful.
            - Url retrieval is failed due to error.
            - Url retrieval is failed because the content is behind paywall.
            - Url retrieval is failed because the content is unsafe.
      description: Context of the a single url retrieval.
    PromptFeedback:
      type: object
      properties:
        blockReason:
          type: string
          description: >-
            Optional. If set, the prompt was blocked and no candidates are
            returned.

            Rephrase the prompt.
          enum:
            - BLOCK_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
            - BLOCKLIST
            - PROHIBITED_CONTENT
            - IMAGE_SAFETY
          x-google-enum-descriptions:
            - Default value. This value is unused.
            - |-
              Prompt was blocked due to safety reasons. Inspect `safety_ratings`
              to understand which safety category blocked it.
            - Prompt was blocked due to unknown reasons.
            - |-
              Prompt was blocked due to the terms which are included from the
              terminology blocklist.
            - Prompt was blocked due to prohibited content.
            - Candidates blocked due to unsafe image generation content.
        safetyRatings:
          type: array
          description: |-
            Ratings for safety of the prompt.
            There is at most one rating per category.
          items:
            $ref: '#/components/schemas/SafetyRating'
      description: |-
        A set of the feedback metadata the prompt specified in
        `GenerateContentRequest.content`.
    UsageMetadata:
      type: object
      properties:
        promptTokenCount:
          type: integer
          description: >-
            Number of tokens in the prompt. When `cached_content` is set, this
            is

            still the total effective prompt size meaning this includes the
            number of

            tokens in the cached content.
          format: int32
        cachedContentTokenCount:
          type: integer
          description: >-
            Number of tokens in the cached part of the prompt (the cached
            content)
          format: int32
        candidatesTokenCount:
          type: integer
          description: Total number of tokens across all the generated response candidates.
          format: int32
        toolUsePromptTokenCount:
          type: integer
          description: Output only. Number of tokens present in tool-use prompt(s).
          format: int32
          readOnly: true
        thoughtsTokenCount:
          type: integer
          description: Output only. Number of tokens of thoughts for thinking models.
          format: int32
          readOnly: true
        totalTokenCount:
          type: integer
          description: |-
            Total token count for the generation request (prompt + response
            candidates).
          format: int32
        promptTokensDetails:
          type: array
          description: >-
            Output only. List of modalities that were processed in the request
            input.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
        cacheTokensDetails:
          type: array
          description: >-
            Output only. List of modalities of the cached content in the request
            input.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
        candidatesTokensDetails:
          type: array
          description: Output only. List of modalities that were returned in the response.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
        toolUsePromptTokensDetails:
          type: array
          description: >-
            Output only. List of modalities that were processed for tool-use
            request inputs.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
      description: Metadata on the generation request's token usage.
    ModalityTokenCount:
      type: object
      properties:
        modality:
          description: The modality associated with this token count.
          allOf:
            - $ref: '#/components/schemas/GenerativeLanguageModality'
        tokenCount:
          type: integer
          description: Number of tokens.
          format: int32
      description: Represents token counting info for a single modality.
    GenerateAnswerRequest:
      required:
        - answerStyle
        - contents
      type: object
      properties:
        inlinePassages:
          description: Passages provided inline with the request.
          allOf:
            - $ref: '#/components/schemas/GroundingPassages'
        semanticRetriever:
          description: |-
            Content retrieved from resources created via the Semantic Retriever
            API.
          allOf:
            - $ref: '#/components/schemas/SemanticRetrieverConfig'
        contents:
          type: array
          description: >-
            Required. The content of the current conversation with the `Model`.
            For single-turn

            queries, this is a single question to answer. For multi-turn
            queries, this

            is a repeated field that contains conversation history and the last

            `Content` in the list containing the question.


            Note: `GenerateAnswer` only supports queries in English.
          items:
            $ref: '#/components/schemas/Content'
        answerStyle:
          type: string
          description: Required. Style in which answers should be returned.
          enum:
            - ANSWER_STYLE_UNSPECIFIED
            - ABSTRACTIVE
            - EXTRACTIVE
            - VERBOSE
          x-google-enum-descriptions:
            - Unspecified answer style.
            - Succinct but abstract style.
            - Very brief and extractive style.
            - >-
              Verbose style including extra details. The response may be
              formatted as a

              sentence, paragraph, multiple paragraphs, or bullet points, etc.
        safetySettings:
          type: array
          description: >-
            Optional. A list of unique `SafetySetting` instances for blocking
            unsafe content.


            This will be enforced on the `GenerateAnswerRequest.contents` and

            `GenerateAnswerResponse.candidate`. There should not be more than
            one

            setting for each `SafetyCategory` type. The API will block any
            contents and

            responses that fail to meet the thresholds set by these settings.
            This list

            overrides the default settings for each `SafetyCategory` specified
            in the

            safety_settings. If there is no `SafetySetting` for a given

            `SafetyCategory` provided in the list, the API will use the default
            safety

            setting for that category. Harm categories
            HARM_CATEGORY_HATE_SPEECH,

            HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT,

            HARM_CATEGORY_HARASSMENT are supported.

            Refer to the

            [guide](https://ai.google.dev/gemini-api/docs/safety-settings)

            for detailed information on available safety settings. Also refer to
            the

            [Safety
            guidance](https://ai.google.dev/gemini-api/docs/safety-guidance) to

            learn how to incorporate safety considerations in your AI
            applications.
          items:
            $ref: '#/components/schemas/SafetySetting'
        temperature:
          type: number
          description: >-
            Optional. Controls the randomness of the output.


            Values can range from [0.0,1.0], inclusive. A value closer to 1.0
            will

            produce responses that are more varied and creative, while a value
            closer

            to 0.0 will typically result in more straightforward responses from
            the

            model. A low temperature (~0.2) is usually recommended for

            Attributed-Question-Answering use cases.
          format: float
      description: Request to generate a grounded answer from the `Model`.
    GroundingPassages:
      type: object
      properties:
        passages:
          type: array
          description: List of passages.
          items:
            $ref: '#/components/schemas/GroundingPassage'
      description: A repeated list of passages.
    GroundingPassage:
      type: object
      properties:
        id:
          type: string
          description: |-
            Identifier for the passage for attributing this passage in grounded
            answers.
        content:
          description: Content of the passage.
          allOf:
            - $ref: '#/components/schemas/Content'
      description: Passage included inline with a grounding configuration.
    SemanticRetrieverConfig:
      required:
        - query
        - source
      type: object
      properties:
        source:
          type: string
          description: >-
            Required. Name of the resource for retrieval. Example: `corpora/123`
            or

            `corpora/123/documents/abc`.
        query:
          description: >-
            Required. Query to use for matching `Chunk`s in the given resource
            by similarity.
          allOf:
            - $ref: '#/components/schemas/Content'
        metadataFilters:
          type: array
          description: >-
            Optional. Filters for selecting `Document`s and/or `Chunk`s from the
            resource.
          items:
            $ref: '#/components/schemas/MetadataFilter'
        maxChunksCount:
          type: integer
          description: Optional. Maximum number of relevant `Chunk`s to retrieve.
          format: int32
        minimumRelevanceScore:
          type: number
          description: Optional. Minimum relevance score for retrieved relevant `Chunk`s.
          format: float
      description: |-
        Configuration for retrieving grounding content from a `Corpus` or
        `Document` created using the Semantic Retriever API.
    MetadataFilter:
      required:
        - conditions
        - key
      type: object
      properties:
        key:
          type: string
          description: Required. The key of the metadata to filter on.
        conditions:
          type: array
          description: >-
            Required. The `Condition`s for the given key that will trigger this
            filter. Multiple

            `Condition`s are joined by logical ORs.
          items:
            $ref: '#/components/schemas/Condition'
      description: >-
        User provided filter to limit retrieval based on `Chunk` or `Document`
        level

        metadata values.

        Example (genre = drama OR genre = action):
          key = "document.custom_metadata.genre"
          conditions = [{string_value = "drama", operation = EQUAL},
                        {string_value = "action", operation = EQUAL}]
    Condition:
      required:
        - operation
      type: object
      properties:
        stringValue:
          type: string
          description: The string value to filter the metadata on.
        numericValue:
          type: number
          description: The numeric value to filter the metadata on.
          format: float
        operation:
          type: string
          description: >-
            Required. Operator applied to the given key-value pair to trigger
            the condition.
          enum:
            - OPERATOR_UNSPECIFIED
            - LESS
            - LESS_EQUAL
            - EQUAL
            - GREATER_EQUAL
            - GREATER
            - NOT_EQUAL
            - INCLUDES
            - EXCLUDES
          x-google-enum-descriptions:
            - The default value. This value is unused.
            - Supported by numeric.
            - Supported by numeric.
            - Supported by numeric & string.
            - Supported by numeric.
            - Supported by numeric.
            - Supported by numeric & string.
            - >-
              Supported by string only when `CustomMetadata` value type for the
              given

              key has a `string_list_value`.
            - >-
              Supported by string only when `CustomMetadata` value type for the
              given

              key has a `string_list_value`.
      description: Filter condition applicable to a single key.
    GenerateAnswerResponse:
      type: object
      properties:
        answer:
          description: >-
            Candidate answer from the model.


            Note: The model *always* attempts to provide a grounded answer, even
            when

            the answer is unlikely to be answerable from the given passages.

            In that case, a low-quality or ungrounded answer may be provided,
            along

            with a low `answerable_probability`.
          allOf:
            - $ref: '#/components/schemas/Candidate'
        answerableProbability:
          type: number
          description: >-
            Output only. The model's estimate of the probability that its answer
            is correct and

            grounded in the input passages.


            A low `answerable_probability` indicates that the answer might not
            be

            grounded in the sources.


            When `answerable_probability` is low, you may want to:


            * Display a message to the effect of "We couldn’t answer that
            question" to

            the user.

            * Fall back to a general-purpose LLM that answers the question from
            world

            knowledge. The threshold and nature of such fallbacks will depend on

            individual use cases. `0.5` is a good starting threshold.
          format: float
          readOnly: true
        inputFeedback:
          description: >-
            Output only. Feedback related to the input data used to answer the
            question, as opposed

            to the model-generated response to the question.


            The input data can be one or more of the following:


            - Question specified by the last entry in
            `GenerateAnswerRequest.content`

            - Conversation history specified by the other entries in

            `GenerateAnswerRequest.content`

            - Grounding sources (`GenerateAnswerRequest.semantic_retriever` or

            `GenerateAnswerRequest.inline_passages`)
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InputFeedback'
      description: Response from the model for a grounded answer.
    InputFeedback:
      type: object
      properties:
        blockReason:
          type: string
          description: >-
            Optional. If set, the input was blocked and no candidates are
            returned.

            Rephrase the input.
          enum:
            - BLOCK_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
          x-google-enum-descriptions:
            - Default value. This value is unused.
            - |-
              Input was blocked due to safety reasons. Inspect
              `safety_ratings` to understand which safety category blocked it.
            - Input was blocked due to other reasons.
        safetyRatings:
          type: array
          description: |-
            Ratings for safety of the input.
            There is at most one rating per category.
          items:
            $ref: '#/components/schemas/SafetyRating'
      description: >-
        Feedback related to the input data used to answer the question, as
        opposed

        to the model-generated response to the question.
    EmbedContentRequest:
      required:
        - content
        - model
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. The model's resource name. This serves as an ID for the
            Model to use.


            This name should match a model name returned by the `ListModels`
            method.


            Format: `models/{model}`
        content:
          description: >-
            Required. The content to embed. Only the `parts.text` fields will be
            counted.
          allOf:
            - $ref: '#/components/schemas/Content'
        taskType:
          description: >-
            Optional. Optional task type for which the embeddings will be used.
            Not supported on

            earlier models (`models/embedding-001`).
          allOf:
            - $ref: '#/components/schemas/TaskType'
        title:
          type: string
          description: >-
            Optional. An optional title for the text. Only applicable when
            TaskType is

            `RETRIEVAL_DOCUMENT`.


            Note: Specifying a `title` for `RETRIEVAL_DOCUMENT` provides better
            quality

            embeddings for retrieval.
        outputDimensionality:
          type: integer
          description: >-
            Optional. Optional reduced dimension for the output embedding. If
            set, excessive

            values in the output embedding are truncated from the end. Supported
            by

            newer models since 2024 only. You cannot set this value if using the

            earlier model (`models/embedding-001`).
          format: int32
      description: Request containing the `Content` for the model to embed.
    EmbedContentResponse:
      type: object
      properties:
        embedding:
          description: Output only. The embedding generated from the input content.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/ContentEmbedding'
      description: The response to an `EmbedContentRequest`.
    ContentEmbedding:
      type: object
      properties:
        values:
          type: array
          description: The embedding values.
          items:
            type: number
            format: float
      description: A list of floats representing an embedding.
    BatchEmbedContentsRequest:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: >-
            Required. Embed requests for the batch. The model in each of these
            requests must

            match the model specified `BatchEmbedContentsRequest.model`.
          items:
            $ref: '#/components/schemas/EmbedContentRequest'
      description: Batch request to get embeddings from the model for a list of prompts.
    BatchEmbedContentsResponse:
      type: object
      properties:
        embeddings:
          type: array
          description: >-
            Output only. The embeddings for each request, in the same order as
            provided in the batch

            request.
          readOnly: true
          items:
            $ref: '#/components/schemas/ContentEmbedding'
      description: The response to a `BatchEmbedContentsRequest`.
    CountTokensRequest:
      type: object
      properties:
        contents:
          type: array
          description: >-
            Optional. The input given to the model as a prompt. This field is
            ignored when

            `generate_content_request` is set.
          items:
            $ref: '#/components/schemas/Content'
        generateContentRequest:
          description: >-
            Optional. The overall input given to the `Model`. This includes the
            prompt as well as

            other model steering information like [system

            instructions](https://ai.google.dev/gemini-api/docs/system-instructions),

            and/or function declarations for [function

            calling](https://ai.google.dev/gemini-api/docs/function-calling).

            `Model`s/`Content`s and `generate_content_request`s are mutually

            exclusive. You can either send `Model` + `Content`s or a

            `generate_content_request`, but never both.
          allOf:
            - $ref: '#/components/schemas/GenerateContentRequest'
      description: >-
        Counts the number of tokens in the `prompt` sent to a model.


        Models may tokenize text differently, so each model may return a
        different

        `token_count`.
    CountTokensResponse:
      type: object
      properties:
        totalTokens:
          type: integer
          description: >-
            The number of tokens that the `Model` tokenizes the `prompt` into.
            Always

            non-negative.
          format: int32
        cachedContentTokenCount:
          type: integer
          description: >-
            Number of tokens in the cached part of the prompt (the cached
            content).
          format: int32
        promptTokensDetails:
          type: array
          description: >-
            Output only. List of modalities that were processed in the request
            input.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
        cacheTokensDetails:
          type: array
          description: >-
            Output only. List of modalities that were processed in the cached
            content.
          readOnly: true
          items:
            $ref: '#/components/schemas/ModalityTokenCount'
      description: |-
        A response from `CountTokens`.

        It returns the model's `token_count` for the `prompt`.
    BatchGenerateContentRequest:
      required:
        - batch
      type: object
      properties:
        batch:
          description: Required. The batch to create.
          allOf:
            - $ref: '#/components/schemas/GenerateContentBatch'
      description: Request for a `BatchGenerateContent` operation.
    GenerateContentBatch:
      required:
        - displayName
        - inputConfig
        - model
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. The name of the `Model` to use for generating the
            completion.


            Format: `models/{model}`.
        name:
          type: string
          description: |-
            Output only. Identifier. Resource name of the batch.

            Format: `batches/{batch_id}`.
          readOnly: true
          x-google-identifier: true
        displayName:
          type: string
          description: Required. The user-defined name of this batch.
        inputConfig:
          description: >-
            Required. Input configuration of the instances on which batch
            processing

            are performed.
          allOf:
            - $ref: '#/components/schemas/InputConfig'
        output:
          description: Output only. The output of the batch request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/GenerateContentBatchOutput'
        createTime:
          type: string
          description: Output only. The time at which the batch was created.
          format: date-time
          readOnly: true
        endTime:
          type: string
          description: Output only. The time at which the batch processing completed.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The time at which the batch was last updated.
          format: date-time
          readOnly: true
        batchStats:
          description: Output only. Stats about the batch.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchStats'
        state:
          description: Output only. The state of the batch.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchState'
        priority:
          type: string
          description: >-
            Optional. The priority of the batch. Batches with a higher priority
            value will be

            processed before batches with a lower priority value. Negative
            values are

            allowed. Default is 0.
          format: int64
      description: A resource representing a batch of `GenerateContent` requests.
    InputConfig:
      type: object
      properties:
        fileName:
          type: string
          description: The name of the `File` containing the input requests.
        requests:
          description: The requests to be processed in the batch.
          allOf:
            - $ref: '#/components/schemas/InlinedRequests'
      description: Configures the input to the batch request.
    InlinedRequests:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: Required. The requests to be processed in the batch.
          items:
            $ref: '#/components/schemas/InlinedRequest'
      description: |-
        The requests to be processed in the batch if provided as part of the
        batch creation request.
    InlinedRequest:
      required:
        - request
      type: object
      properties:
        request:
          description: Required. The request to be processed in the batch.
          allOf:
            - $ref: '#/components/schemas/GenerateContentRequest'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Optional. The metadata to be associated with the request.
      description: The request to be processed in the batch.
    GenerateContentBatchOutput:
      type: object
      properties:
        responsesFile:
          type: string
          description: >-
            Output only. The file ID of the file containing the responses.

            The file will be a JSONL file with a single response per line.

            The responses will be `GenerateContentResponse` messages formatted
            as

            JSON.

            The responses will be written in the same order as the input
            requests.
          readOnly: true
        inlinedResponses:
          description: >-
            Output only. The responses to the requests in the batch. Returned
            when the batch was

            built using inlined requests. The responses will be in the same
            order as

            the input requests.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedResponses'
      description: >-
        The output of a batch request. This is returned in the

        `BatchGenerateContentResponse` or the `GenerateContentBatch.output`
        field.
    InlinedResponses:
      type: object
      properties:
        inlinedResponses:
          type: array
          description: Output only. The responses to the requests in the batch.
          readOnly: true
          items:
            $ref: '#/components/schemas/InlinedResponse'
      description: The responses to the requests in the batch.
    InlinedResponse:
      type: object
      properties:
        error:
          description: Output only. The error encountered while processing the request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Status'
        response:
          description: Output only. The response to the request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/GenerateContentResponse'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Output only. The metadata associated with the request.
          readOnly: true
      description: The response to a single request in the batch.
    BatchStats:
      type: object
      properties:
        requestCount:
          type: string
          description: Output only. The number of requests in the batch.
          format: int64
          readOnly: true
        successfulRequestCount:
          type: string
          description: >-
            Output only. The number of requests that were successfully
            processed.
          format: int64
          readOnly: true
        failedRequestCount:
          type: string
          description: Output only. The number of requests that failed to be processed.
          format: int64
          readOnly: true
        pendingRequestCount:
          type: string
          description: >-
            Output only. The number of requests that are still pending
            processing.
          format: int64
          readOnly: true
      description: Stats about the batch.
    BatchGenerateContentResponse:
      type: object
      properties:
        output:
          description: Output only. The output of the batch request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/GenerateContentBatchOutput'
      description: Response for a `BatchGenerateContent` operation.
    AsyncBatchEmbedContentRequest:
      required:
        - batch
      type: object
      properties:
        batch:
          description: Required. The batch to create.
          allOf:
            - $ref: '#/components/schemas/EmbedContentBatch'
      description: Request for an `AsyncBatchEmbedContent` operation.
    EmbedContentBatch:
      required:
        - displayName
        - inputConfig
        - model
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. The name of the `Model` to use for generating the
            completion.


            Format: `models/{model}`.
        name:
          type: string
          description: |-
            Output only. Identifier. Resource name of the batch.

            Format: `batches/{batch_id}`.
          readOnly: true
          x-google-identifier: true
        displayName:
          type: string
          description: Required. The user-defined name of this batch.
        inputConfig:
          description: >-
            Required. Input configuration of the instances on which batch
            processing

            are performed.
          allOf:
            - $ref: '#/components/schemas/InputEmbedContentConfig'
        output:
          description: Output only. The output of the batch request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EmbedContentBatchOutput'
        createTime:
          type: string
          description: Output only. The time at which the batch was created.
          format: date-time
          readOnly: true
        endTime:
          type: string
          description: Output only. The time at which the batch processing completed.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The time at which the batch was last updated.
          format: date-time
          readOnly: true
        batchStats:
          description: Output only. Stats about the batch.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EmbedContentBatchStats'
        state:
          description: Output only. The state of the batch.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/BatchState'
        priority:
          type: string
          description: >-
            Optional. The priority of the batch. Batches with a higher priority
            value will be

            processed before batches with a lower priority value. Negative
            values are

            allowed. Default is 0.
          format: int64
      description: A resource representing a batch of `EmbedContent` requests.
    InputEmbedContentConfig:
      type: object
      properties:
        fileName:
          type: string
          description: The name of the `File` containing the input requests.
        requests:
          description: The requests to be processed in the batch.
          allOf:
            - $ref: '#/components/schemas/InlinedEmbedContentRequests'
      description: Configures the input to the batch request.
    InlinedEmbedContentRequests:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: Required. The requests to be processed in the batch.
          items:
            $ref: '#/components/schemas/InlinedEmbedContentRequest'
      description: |-
        The requests to be processed in the batch if provided as part of the
        batch creation request.
    InlinedEmbedContentRequest:
      required:
        - request
      type: object
      properties:
        request:
          description: Required. The request to be processed in the batch.
          allOf:
            - $ref: '#/components/schemas/EmbedContentRequest'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Optional. The metadata to be associated with the request.
      description: The request to be processed in the batch.
    EmbedContentBatchOutput:
      type: object
      properties:
        responsesFile:
          type: string
          description: >-
            Output only. The file ID of the file containing the responses.

            The file will be a JSONL file with a single response per line.

            The responses will be `EmbedContentResponse` messages formatted as
            JSON.

            The responses will be written in the same order as the input
            requests.
          readOnly: true
        inlinedResponses:
          description: >-
            Output only. The responses to the requests in the batch. Returned
            when the batch was

            built using inlined requests. The responses will be in the same
            order as

            the input requests.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/InlinedEmbedContentResponses'
      description: >-
        The output of a batch request. This is returned in the

        `AsyncBatchEmbedContentResponse` or the `EmbedContentBatch.output`
        field.
    InlinedEmbedContentResponses:
      type: object
      properties:
        inlinedResponses:
          type: array
          description: Output only. The responses to the requests in the batch.
          readOnly: true
          items:
            $ref: '#/components/schemas/InlinedEmbedContentResponse'
      description: The responses to the requests in the batch.
    InlinedEmbedContentResponse:
      type: object
      properties:
        error:
          description: Output only. The error encountered while processing the request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Status'
        response:
          description: Output only. The response to the request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EmbedContentResponse'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object.
          description: Output only. The metadata associated with the request.
          readOnly: true
      description: The response to a single request in the batch.
    EmbedContentBatchStats:
      type: object
      properties:
        requestCount:
          type: string
          description: Output only. The number of requests in the batch.
          format: int64
          readOnly: true
        successfulRequestCount:
          type: string
          description: >-
            Output only. The number of requests that were successfully
            processed.
          format: int64
          readOnly: true
        failedRequestCount:
          type: string
          description: Output only. The number of requests that failed to be processed.
          format: int64
          readOnly: true
        pendingRequestCount:
          type: string
          description: >-
            Output only. The number of requests that are still pending
            processing.
          format: int64
          readOnly: true
      description: Stats about the batch.
    AsyncBatchEmbedContentResponse:
      type: object
      properties:
        output:
          description: Output only. The output of the batch request.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/EmbedContentBatchOutput'
      description: Response for a `BatchGenerateContent` operation.
    ListCachedContentsResponse:
      type: object
      properties:
        cachedContents:
          type: array
          description: List of cached contents.
          items:
            $ref: '#/components/schemas/CachedContent'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.

            If this field is omitted, there are no subsequent pages.
      description: Response with CachedContents list.
    CachedContent:
      required:
        - model
      type: object
      properties:
        expireTime:
          type: string
          description: |-
            Timestamp in UTC of when this resource is considered expired.
            This is *always* provided on output, regardless of what was sent
            on input.
          format: date-time
        ttl:
          type: string
          description: 'Input only. New TTL for this resource, input only.'
          format: google-duration
          writeOnly: true
        name:
          type: string
          description: >-
            Output only. Identifier. The resource name referring to the cached
            content.

            Format: `cachedContents/{id}`
          readOnly: true
          x-google-identifier: true
        displayName:
          type: string
          description: >-
            Optional. Immutable. The user-generated meaningful display name of
            the cached content. Maximum

            128 Unicode characters.
          x-google-immutable: true
        model:
          type: string
          description: >-
            Required. Immutable. The name of the `Model` to use for cached
            content

            Format: `models/{model}`
          x-google-immutable: true
        systemInstruction:
          description: >-
            Optional. Input only. Immutable. Developer set system instruction.
            Currently text only.
          writeOnly: true
          allOf:
            - $ref: '#/components/schemas/Content'
          x-google-immutable: true
        contents:
          type: array
          description: Optional. Input only. Immutable. The content to cache.
          writeOnly: true
          items:
            $ref: '#/components/schemas/Content'
          x-google-immutable: true
        tools:
          type: array
          description: >-
            Optional. Input only. Immutable. A list of `Tools` the model may use
            to generate the next response
          writeOnly: true
          items:
            $ref: '#/components/schemas/Tool'
          x-google-immutable: true
        toolConfig:
          description: >-
            Optional. Input only. Immutable. Tool config. This config is shared
            for all tools.
          writeOnly: true
          allOf:
            - $ref: '#/components/schemas/ToolConfig'
          x-google-immutable: true
        createTime:
          type: string
          description: Output only. Creation time of the cache entry.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. When the cache entry was last updated in UTC time.
          format: date-time
          readOnly: true
        usageMetadata:
          description: Output only. Metadata on the usage of the cached content.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/CachedContentUsageMetadata'
      description: |-
        Content that has been preprocessed and can be used in subsequent request
        to GenerativeService.

        Cached content can be only used with model it was created for.
    CachedContentUsageMetadata:
      type: object
      properties:
        totalTokenCount:
          type: integer
          description: Total number of tokens that the cached content consumes.
          format: int32
      description: Metadata on the usage of the cached content.
    GenerateMessageRequest:
      required:
        - prompt
      type: object
      properties:
        prompt:
          description: >-
            Required. The structured textual input given to the model as a
            prompt.


            Given a

            prompt, the model will return what it predicts is the next message
            in the

            discussion.
          allOf:
            - $ref: '#/components/schemas/MessagePrompt'
        temperature:
          type: number
          description: >-
            Optional. Controls the randomness of the output.


            Values can range over `[0.0,1.0]`,

            inclusive. A value closer to `1.0` will produce responses that are
            more

            varied, while a value closer to `0.0` will typically result in

            less surprising responses from the model.
          format: float
        candidateCount:
          type: integer
          description: |-
            Optional. The number of generated response messages to return.

            This value must be between
            `[1, 8]`, inclusive. If unset, this will default to `1`.
          format: int32
        topP:
          type: number
          description: >-
            Optional. The maximum cumulative probability of tokens to consider
            when sampling.


            The model uses combined Top-k and nucleus sampling.


            Nucleus sampling considers the smallest set of tokens whose
            probability

            sum is at least `top_p`.
          format: float
        topK:
          type: integer
          description: |-
            Optional. The maximum number of tokens to consider when sampling.

            The model uses combined Top-k and nucleus sampling.

            Top-k sampling considers the set of `top_k` most probable tokens.
          format: int32
      description: Request to generate a message response from the model.
    MessagePrompt:
      required:
        - messages
      type: object
      properties:
        context:
          type: string
          description: >-
            Optional. Text that should be provided to the model first to ground
            the response.


            If not empty, this `context` will be given to the model first before
            the

            `examples` and `messages`. When using a `context` be sure to provide
            it

            with every request to maintain continuity.


            This field can be a description of your prompt to the model to help
            provide

            context and guide the responses. Examples: "Translate the phrase
            from

            English to French." or "Given a statement, classify the sentiment as
            happy,

            sad or neutral."


            Anything included in this field will take precedence over message
            history

            if the total input size exceeds the model's `input_token_limit` and
            the

            input request is truncated.
        examples:
          type: array
          description: >-
            Optional. Examples of what the model should generate.


            This includes both user input and the response that the model should

            emulate.


            These `examples` are treated identically to conversation messages
            except

            that they take precedence over the history in `messages`:

            If the total input size exceeds the model's `input_token_limit` the
            input

            will be truncated. Items will be dropped from `messages` before
            `examples`.
          items:
            $ref: '#/components/schemas/Example'
        messages:
          type: array
          description: >-
            Required. A snapshot of the recent conversation history sorted
            chronologically.


            Turns alternate between two authors.


            If the total input size exceeds the model's `input_token_limit` the
            input

            will be truncated: The oldest items will be dropped from `messages`.
          items:
            $ref: '#/components/schemas/Message'
      description: >-
        All of the structured input text passed to the model as a prompt.


        A `MessagePrompt` contains a structured set of fields that provide
        context

        for the conversation, examples of user input/model output message pairs
        that

        prime the model to respond in different ways, and the conversation
        history

        or list of messages representing the alternating turns of the
        conversation

        between the user and the model.
    Example:
      required:
        - input
        - output
      type: object
      properties:
        input:
          description: Required. An example of an input `Message` from the user.
          allOf:
            - $ref: '#/components/schemas/Message'
        output:
          description: >-
            Required. An example of what the model should output given the
            input.
          allOf:
            - $ref: '#/components/schemas/Message'
      description: |-
        An input/output example used to instruct the Model.

        It demonstrates how the model should respond or format its response.
    Message:
      required:
        - content
      type: object
      properties:
        author:
          type: string
          description: |-
            Optional. The author of this Message.

            This serves as a key for tagging
            the content of this Message when it is fed to the model as text.

            The author can be any alphanumeric string.
        content:
          type: string
          description: Required. The text content of the structured `Message`.
        citationMetadata:
          description: >-
            Output only. Citation information for model-generated `content` in
            this `Message`.


            If this `Message` was generated as output from the model, this field
            may be

            populated with attribution information for any text included in the

            `content`. This field is used only on output.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/CitationMetadata'
      description: |-
        The base unit of structured text.

        A `Message` includes an `author` and the `content` of
        the `Message`.

        The `author` is used to tag messages when they are fed to the
        model as text.
    GenerateMessageResponse:
      type: object
      properties:
        candidates:
          type: array
          description: Candidate response messages from the model.
          items:
            $ref: '#/components/schemas/Message'
        messages:
          type: array
          description: The conversation history used by the model.
          items:
            $ref: '#/components/schemas/Message'
        filters:
          type: array
          description: >-
            A set of content filtering metadata for the prompt and response

            text.


            This indicates which `SafetyCategory`(s) blocked a

            candidate from this response, the lowest `HarmProbability`

            that triggered a block, and the HarmThreshold setting for that
            category.
          items:
            $ref: '#/components/schemas/ContentFilter'
      description: |-
        The response from the model.

        This includes candidate messages and
        conversation history in the form of chronologically-ordered messages.
    ContentFilter:
      type: object
      properties:
        reason:
          type: string
          description: The reason content was blocked during request processing.
          enum:
            - BLOCKED_REASON_UNSPECIFIED
            - SAFETY
            - OTHER
          x-google-enum-descriptions:
            - A blocked reason was not specified.
            - Content was blocked by safety settings.
            - 'Content was blocked, but the reason is uncategorized.'
        message:
          type: string
          description: A string that describes the filtering behavior in more detail.
      description: >-
        Content filtering metadata associated with processing a single request.


        ContentFilter contains a reason and an optional supporting string. The
        reason

        may be unspecified.
    CountMessageTokensRequest:
      required:
        - prompt
      type: object
      properties:
        prompt:
          description: 'Required. The prompt, whose token count is to be returned.'
          allOf:
            - $ref: '#/components/schemas/MessagePrompt'
      description: >-
        Counts the number of tokens in the `prompt` sent to a model.


        Models may tokenize text differently, so each model may return a
        different

        `token_count`.
    CountMessageTokensResponse:
      type: object
      properties:
        tokenCount:
          type: integer
          description: |-
            The number of tokens that the `model` tokenizes the `prompt` into.

            Always non-negative.
          format: int32
      description: |-
        A response from `CountMessageTokens`.

        It returns the model's `token_count` for the `prompt`.
    CreateFileRequest:
      type: object
      properties:
        file:
          description: Optional. Metadata for the file to create.
          allOf:
            - $ref: '#/components/schemas/File'
      description: Request for `CreateFile`.
    File:
      type: object
      properties:
        videoMetadata:
          description: Output only. Metadata for a video.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/VideoFileMetadata'
        name:
          type: string
          description: >-
            Immutable. Identifier. The `File` resource name. The ID (name
            excluding the "files/" prefix) can

            contain up to 40 characters that are lowercase alphanumeric or
            dashes (-).

            The ID cannot start or end with a dash. If the name is empty on
            create, a

            unique name will be generated.

            Example: `files/123-456`
          x-google-immutable: true
          x-google-identifier: true
        displayName:
          type: string
          description: >-
            Optional. The human-readable display name for the `File`. The
            display name must be

            no more than 512 characters in length, including spaces.

            Example: "Welcome Image"
        mimeType:
          type: string
          description: Output only. MIME type of the file.
          readOnly: true
        sizeBytes:
          type: string
          description: Output only. Size of the file in bytes.
          format: int64
          readOnly: true
        createTime:
          type: string
          description: Output only. The timestamp of when the `File` was created.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The timestamp of when the `File` was last updated.
          format: date-time
          readOnly: true
        expirationTime:
          type: string
          description: >-
            Output only. The timestamp of when the `File` will be deleted. Only
            set if the `File` is

            scheduled to expire.
          format: date-time
          readOnly: true
        sha256Hash:
          type: string
          description: Output only. SHA-256 hash of the uploaded bytes.
          format: byte
          readOnly: true
        uri:
          type: string
          description: Output only. The uri of the `File`.
          readOnly: true
        downloadUri:
          type: string
          description: Output only. The download uri of the `File`.
          readOnly: true
        state:
          type: string
          description: Output only. Processing state of the File.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - ACTIVE
            - FAILED
          x-google-enum-descriptions:
            - The default value. This value is used if the state is omitted.
            - File is being processed and cannot be used for inference yet.
            - File is processed and available for inference.
            - File failed processing.
        source:
          type: string
          description: Source of the File.
          enum:
            - SOURCE_UNSPECIFIED
            - UPLOADED
            - GENERATED
          x-google-enum-descriptions:
            - Used if source is not specified.
            - Indicates the file is uploaded by the user.
            - Indicates the file is generated by Google.
        error:
          description: Output only. Error status if File processing failed.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Status'
      description: |-
        A file uploaded to the API.
        Next ID: 15
    VideoFileMetadata:
      type: object
      properties:
        videoDuration:
          type: string
          description: Duration of the video.
          format: google-duration
      description: Metadata for a video `File`.
    CreateFileResponse:
      type: object
      properties:
        file:
          description: Metadata for the created file.
          allOf:
            - $ref: '#/components/schemas/File'
      description: Response for `CreateFile`.
    ListFilesResponse:
      type: object
      properties:
        files:
          type: array
          description: The list of `File`s.
          items:
            $ref: '#/components/schemas/File'
        nextPageToken:
          type: string
          description: >-
            A token that can be sent as a `page_token` into a subsequent
            `ListFiles`

            call.
      description: Response for `ListFiles`.
    DownloadFileResponse:
      type: object
      description: Response for `DownloadFile`.
    GeneratedFile:
      type: object
      properties:
        name:
          type: string
          description: |-
            Identifier. The name of the generated file.
            Example: `generatedFiles/abc-123`
          x-google-identifier: true
        mimeType:
          type: string
          description: MIME type of the generatedFile.
        state:
          type: string
          description: Output only. The state of the GeneratedFile.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - GENERATING
            - GENERATED
            - FAILED
          x-google-enum-descriptions:
            - The default value. This value is used if the state is omitted.
            - Being generated.
            - Generated and is ready for download.
            - Failed to generate the GeneratedFile.
        error:
          description: >-
            Error details if the GeneratedFile ends up in the STATE_FAILED
            state.
          allOf:
            - $ref: '#/components/schemas/Status'
      description: A file generated on behalf of a user.
    ListGeneratedFilesResponse:
      type: object
      properties:
        generatedFiles:
          type: array
          description: The list of `GeneratedFile`s.
          items:
            $ref: '#/components/schemas/GeneratedFile'
        nextPageToken:
          type: string
          description: |-
            A token that can be sent as a `page_token` into a subsequent
            `ListGeneratedFiles` call.
      description: Response for `ListGeneratedFiles`.
    Model:
      required:
        - baseModelId
        - name
        - version
      type: object
      properties:
        name:
          type: string
          description: >-
            Required. The resource name of the `Model`. Refer to [Model

            variants](https://ai.google.dev/gemini-api/docs/models/gemini#model-variations)

            for all allowed values.


            Format: `models/{model}` with a `{model}` naming convention of:


            * "{base_model_id}-{version}"


            Examples:


            * `models/gemini-1.5-flash-001`
        baseModelId:
          type: string
          description: >-
            Required. The name of the base model, pass this to the generation
            request.


            Examples:


            * `gemini-1.5-flash`
        version:
          type: string
          description: |-
            Required. The version number of the model.

            This represents the major version (`1.0` or `1.5`)
        displayName:
          type: string
          description: >-
            The human-readable name of the model. E.g. "Gemini 1.5 Flash".


            The name can be up to 128 characters long and can consist of any
            UTF-8

            characters.
        description:
          type: string
          description: A short description of the model.
        inputTokenLimit:
          type: integer
          description: Maximum number of input tokens allowed for this model.
          format: int32
        outputTokenLimit:
          type: integer
          description: Maximum number of output tokens available for this model.
          format: int32
        supportedGenerationMethods:
          type: array
          description: |-
            The model's supported generation methods.

            The corresponding API method names are defined as Pascal case
            strings, such as `generateMessage` and `generateContent`.
          items:
            type: string
        temperature:
          type: number
          description: >-
            Controls the randomness of the output.


            Values can range over `[0.0,max_temperature]`, inclusive. A higher
            value

            will produce responses that are more varied, while a value closer to
            `0.0`

            will typically result in less surprising responses from the model.

            This value specifies default to be used by the backend while making
            the

            call to the model.
          format: float
        maxTemperature:
          type: number
          description: The maximum temperature this model can use.
          format: float
        topP:
          type: number
          description: >-
            For [Nucleus

            sampling](https://ai.google.dev/gemini-api/docs/prompting-strategies#top-p).


            Nucleus sampling considers the smallest set of tokens whose
            probability

            sum is at least `top_p`.

            This value specifies default to be used by the backend while making
            the

            call to the model.
          format: float
        topK:
          type: integer
          description: >-
            For Top-k sampling.


            Top-k sampling considers the set of `top_k` most probable tokens.

            This value specifies default to be used by the backend while making
            the

            call to the model.

            If empty, indicates the model doesn't use top-k sampling, and
            `top_k` isn't

            allowed as a generation parameter.
          format: int32
        thinking:
          type: boolean
          description: Whether the model supports thinking.
      description: Information about a Generative Language Model.
    ListModelsResponse:
      type: object
      properties:
        models:
          type: array
          description: The returned Models.
          items:
            $ref: '#/components/schemas/Model'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.


            If this field is omitted, there are no more pages.
      description: Response from `ListModel` containing a paginated list of Models.
    TunedModel:
      required:
        - tuningTask
      type: object
      properties:
        tunedModelSource:
          description: >-
            Optional. TunedModel to use as the starting point for training the
            new model.
          allOf:
            - $ref: '#/components/schemas/TunedModelSource'
        baseModel:
          type: string
          description: |-
            Immutable. The name of the `Model` to tune.
            Example: `models/gemini-1.5-flash-001`
          x-google-immutable: true
        name:
          type: string
          description: >-
            Output only. The tuned model name. A unique name will be generated
            on create.

            Example: `tunedModels/az2mb0bpw6i`

            If display_name is set on create, the id portion of the name will be
            set

            by concatenating the words of the display_name with hyphens and
            adding a

            random portion for uniqueness.


            Example:

             * display_name = `Sentence Translator`
             * name = `tunedModels/sentence-translator-u3b7m`
          readOnly: true
        displayName:
          type: string
          description: |-
            Optional. The name to display for this model in user interfaces.
            The display name must be up to 40 characters including spaces.
        description:
          type: string
          description: Optional. A short description of this model.
        temperature:
          type: number
          description: >-
            Optional. Controls the randomness of the output.


            Values can range over `[0.0,1.0]`, inclusive. A value closer to
            `1.0` will

            produce responses that are more varied, while a value closer to
            `0.0` will

            typically result in less surprising responses from the model.


            This value specifies default to be the one used by the base model
            while

            creating the model.
          format: float
        topP:
          type: number
          description: >-
            Optional. For Nucleus sampling.


            Nucleus sampling considers the smallest set of tokens whose
            probability

            sum is at least `top_p`.


            This value specifies default to be the one used by the base model
            while

            creating the model.
          format: float
        topK:
          type: integer
          description: >-
            Optional. For Top-k sampling.


            Top-k sampling considers the set of `top_k` most probable tokens.

            This value specifies default to be used by the backend while making
            the

            call to the model.


            This value specifies default to be the one used by the base model
            while

            creating the model.
          format: int32
        state:
          type: string
          description: Output only. The state of the tuned model.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - FAILED
          x-google-enum-descriptions:
            - The default value. This value is unused.
            - The model is being created.
            - The model is ready to be used.
            - The model failed to be created.
        createTime:
          type: string
          description: Output only. The timestamp when this model was created.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The timestamp when this model was updated.
          format: date-time
          readOnly: true
        tuningTask:
          description: Required. The tuning task that creates the tuned model.
          allOf:
            - $ref: '#/components/schemas/TuningTask'
        readerProjectNumbers:
          type: array
          description: >-
            Optional. List of project numbers that have read access to the tuned
            model.
          items:
            type: string
            format: int64
      description: A fine-tuned model created using ModelService.CreateTunedModel.
    TunedModelSource:
      type: object
      properties:
        tunedModel:
          type: string
          description: >-
            Immutable. The name of the `TunedModel` to use as the starting point
            for

            training the new model.

            Example: `tunedModels/my-tuned-model`
          x-google-immutable: true
        baseModel:
          type: string
          description: >-
            Output only. The name of the base `Model` this `TunedModel` was
            tuned from.

            Example: `models/gemini-1.5-flash-001`
          readOnly: true
      description: Tuned model as a source for training a new model.
    TuningTask:
      required:
        - trainingData
      type: object
      properties:
        startTime:
          type: string
          description: Output only. The timestamp when tuning this model started.
          format: date-time
          readOnly: true
        completeTime:
          type: string
          description: Output only. The timestamp when tuning this model completed.
          format: date-time
          readOnly: true
        snapshots:
          type: array
          description: Output only. Metrics collected during tuning.
          readOnly: true
          items:
            $ref: '#/components/schemas/TuningSnapshot'
        trainingData:
          description: Required. Input only. Immutable. The model training data.
          writeOnly: true
          allOf:
            - $ref: '#/components/schemas/Dataset'
          x-google-immutable: true
        hyperparameters:
          description: >-
            Immutable. Hyperparameters controlling the tuning process. If not
            provided, default

            values will be used.
          allOf:
            - $ref: '#/components/schemas/Hyperparameters'
          x-google-immutable: true
      description: Tuning tasks that create tuned models.
    TuningSnapshot:
      type: object
      properties:
        step:
          type: integer
          description: Output only. The tuning step.
          format: int32
          readOnly: true
        epoch:
          type: integer
          description: Output only. The epoch this step was part of.
          format: int32
          readOnly: true
        meanLoss:
          type: number
          description: Output only. The mean loss of the training examples for this step.
          format: float
          readOnly: true
        computeTime:
          type: string
          description: Output only. The timestamp when this metric was computed.
          format: date-time
          readOnly: true
      description: Record for a single tuning step.
    Dataset:
      type: object
      properties:
        examples:
          description: Optional. Inline examples with simple input/output text.
          allOf:
            - $ref: '#/components/schemas/TuningExamples'
      description: Dataset for training or validation.
    TuningExamples:
      type: object
      properties:
        examples:
          type: array
          description: >-
            The examples. Example input can be for text or discuss, but all
            examples

            in a set must be of the same type.
          items:
            $ref: '#/components/schemas/TuningExample'
      description: A set of tuning examples. Can be training or validation data.
    TuningExample:
      required:
        - output
      type: object
      properties:
        textInput:
          type: string
          description: Optional. Text model input.
        output:
          type: string
          description: Required. The expected model output.
      description: A single example for tuning.
    Hyperparameters:
      type: object
      properties:
        learningRate:
          type: number
          description: >-
            Optional. Immutable. The learning rate hyperparameter for tuning.

            If not set, a default of 0.001 or 0.0002 will be calculated based on
            the

            number of training examples.
          format: float
          x-google-immutable: true
        learningRateMultiplier:
          type: number
          description: >-
            Optional. Immutable. The learning rate multiplier is used to
            calculate a final learning_rate

            based on the default (recommended) value.

            Actual learning rate := learning_rate_multiplier * default learning
            rate

            Default learning rate is dependent on base model and dataset size.

            If not set, a default of 1.0 will be used.
          format: float
          x-google-immutable: true
        epochCount:
          type: integer
          description: >-
            Immutable. The number of training epochs. An epoch is one pass
            through the training

            data.

            If not set, a default of 5 will be used.
          format: int32
          x-google-immutable: true
        batchSize:
          type: integer
          description: |-
            Immutable. The batch size hyperparameter for tuning.
            If not set, a default of 4 or 16 will be used based on the number of
            training examples.
          format: int32
          x-google-immutable: true
      description: |-
        Hyperparameters controlling the tuning process. Read more at
        https://ai.google.dev/docs/model_tuning_guidance
    ListTunedModelsResponse:
      type: object
      properties:
        tunedModels:
          type: array
          description: The returned Models.
          items:
            $ref: '#/components/schemas/TunedModel'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.


            If this field is omitted, there are no more pages.
      description: Response from `ListTunedModels` containing a paginated list of Models.
    CreateTunedModelMetadata:
      type: object
      properties:
        tunedModel:
          type: string
          description: Name of the tuned model associated with the tuning operation.
        totalSteps:
          type: integer
          description: The total number of tuning steps.
          format: int32
        completedSteps:
          type: integer
          description: The number of steps completed.
          format: int32
        completedPercent:
          type: number
          description: The completed percentage for the tuning operation.
          format: float
        snapshots:
          type: array
          description: Metrics collected during tuning.
          items:
            $ref: '#/components/schemas/TuningSnapshot'
      description: >-
        Metadata about the state and progress of creating a tuned model returned
        from

        the long-running operation
    Permission:
      required:
        - role
      type: object
      properties:
        name:
          type: string
          description: >-
            Output only. Identifier. The permission name. A unique name will be
            generated on create.

            Examples:
                tunedModels/{tuned_model}/permissions/{permission}
                corpora/{corpus}/permissions/{permission}
            Output only.
          readOnly: true
          x-google-identifier: true
        granteeType:
          type: string
          description: Optional. Immutable. The type of the grantee.
          enum:
            - GRANTEE_TYPE_UNSPECIFIED
            - USER
            - GROUP
            - EVERYONE
          x-google-immutable: true
          x-google-enum-descriptions:
            - The default value. This value is unused.
            - >-
              Represents a user. When set, you must provide email_address for
              the user.
            - >-
              Represents a group. When set, you must provide email_address for
              the

              group.
            - Represents access to everyone. No extra information is required.
        emailAddress:
          type: string
          description: >-
            Optional. Immutable. The email address of the user of group which
            this permission refers.

            Field is not set when permission's grantee type is EVERYONE.
          x-google-immutable: true
        role:
          type: string
          description: Required. The role granted by this permission.
          enum:
            - ROLE_UNSPECIFIED
            - OWNER
            - WRITER
            - READER
          x-google-enum-descriptions:
            - The default value. This value is unused.
            - 'Owner can use, update, share and delete the resource.'
            - 'Writer can use, update and share the resource.'
            - Reader can use the resource.
      description: >-
        Permission resource grants user, group or the rest of the world access
        to the

        PaLM API resource (e.g. a tuned model, corpus).


        A role is a collection of permitted operations that allows users to
        perform

        specific actions on PaLM API resources. To make them available to users,

        groups, or service accounts, you assign roles. When you assign a role,
        you

        grant permissions that the role contains.


        There are three concentric roles. Each role is a superset of the
        previous

        role's permitted operations:


        - reader can use the resource (e.g. tuned model, corpus) for inference

        - writer has reader's permissions and additionally can edit and share

        - owner has writer's permissions and additionally can delete
    ListPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          description: Returned permissions.
          items:
            $ref: '#/components/schemas/Permission'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.


            If this field is omitted, there are no more pages.
      description: |-
        Response from `ListPermissions` containing a paginated list of
        permissions.
    TransferOwnershipRequest:
      required:
        - emailAddress
      type: object
      properties:
        emailAddress:
          type: string
          description: >-
            Required. The email address of the user to whom the tuned model is
            being transferred

            to.
      description: Request to transfer the ownership of the tuned model.
    TransferOwnershipResponse:
      type: object
      description: Response from `TransferOwnership`.
    PredictRequest:
      required:
        - instances
      type: object
      properties:
        instances:
          type: array
          description: Required. The instances that are the input to the prediction call.
          items: {}
        parameters:
          description: Optional. The parameters that govern the prediction call.
      description: Request message for PredictionService.Predict.
    PredictResponse:
      type: object
      properties:
        predictions:
          type: array
          description: The outputs of the prediction call.
          items: {}
      description: 'Response message for [PredictionService.Predict].'
    PredictLongRunningRequest:
      required:
        - instances
      type: object
      properties:
        instances:
          type: array
          description: Required. The instances that are the input to the prediction call.
          items: {}
        parameters:
          description: Optional. The parameters that govern the prediction call.
      description: 'Request message for [PredictionService.PredictLongRunning].'
    PredictLongRunningResponse:
      type: object
      properties:
        generateVideoResponse:
          description: The response of the video generation prediction.
          allOf:
            - $ref: '#/components/schemas/GenerateVideoResponse'
      description: 'Response message for [PredictionService.PredictLongRunning]'
    GenerateVideoResponse:
      type: object
      properties:
        generatedSamples:
          type: array
          description: The generated samples.
          items:
            $ref: '#/components/schemas/Media'
        raiMediaFilteredCount:
          type: integer
          description: Returns if any videos were filtered due to RAI policies.
          format: int32
        raiMediaFilteredReasons:
          type: array
          description: Returns rai failure reasons if any.
          items:
            type: string
      description: Veo response.
    Media:
      type: object
      properties:
        video:
          description: Video as the only one for now.  This is mimicking Vertex proto.
          allOf:
            - $ref: '#/components/schemas/Video'
      description: A proto encapsulate various type of media.
    Video:
      type: object
      properties:
        video:
          type: string
          description: Raw bytes.
          format: byte
        uri:
          type: string
          description: Path to another storage.
      description: Representation of a video.
    PredictLongRunningMetadata:
      type: object
      description: Metadata for PredictLongRunning long running operations.
    Corpus:
      type: object
      properties:
        name:
          type: string
          description: >-
            Output only. Immutable. Identifier. The `Corpus` resource name. The
            ID (name excluding the "corpora/" prefix)

            can contain up to 40 characters that are lowercase alphanumeric or
            dashes

            (-). The ID cannot start or end with a dash. If the name is empty on

            create, a unique name will be derived from `display_name` along with
            a 12

            character random suffix.

            Example: `corpora/my-awesome-corpora-123a456b789c`
          readOnly: true
          x-google-immutable: true
          x-google-identifier: true
        displayName:
          type: string
          description: >-
            Optional. The human-readable display name for the `Corpus`. The
            display name must be

            no more than 512 characters in length, including spaces.

            Example: "Docs on Semantic Retriever"
        createTime:
          type: string
          description: Output only. The Timestamp of when the `Corpus` was created.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The Timestamp of when the `Corpus` was last updated.
          format: date-time
          readOnly: true
      description: |-
        A `Corpus` is a collection of `Document`s.
        A project can create up to 5 corpora.
    ListCorporaResponse:
      type: object
      properties:
        corpora:
          type: array
          description: The returned corpora.
          items:
            $ref: '#/components/schemas/Corpus'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.

            If this field is omitted, there are no more pages.
      description: |-
        Response from `ListCorpora` containing a paginated list of `Corpora`.
        The results are sorted by ascending `corpus.create_time`.
    QueryCorpusRequest:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: Required. Query string to perform semantic search.
        metadataFilters:
          type: array
          description: >-
            Optional. Filter for `Chunk` and `Document` metadata. Each
            `MetadataFilter` object

            should correspond to a unique key. Multiple `MetadataFilter` objects
            are

            joined by logical "AND"s.


            Example query at document level:

            (year >= 2020 OR year < 2010) AND (genre = drama OR genre = action)


            `MetadataFilter` object list:
             metadata_filters = [
             {key = "document.custom_metadata.year"
              conditions = [{int_value = 2020, operation = GREATER_EQUAL},
                            {int_value = 2010, operation = LESS}]},
             {key = "document.custom_metadata.year"
              conditions = [{int_value = 2020, operation = GREATER_EQUAL},
                            {int_value = 2010, operation = LESS}]},
             {key = "document.custom_metadata.genre"
              conditions = [{string_value = "drama", operation = EQUAL},
                            {string_value = "action", operation = EQUAL}]}]

            Example query at chunk level for a numeric range of values:

            (year > 2015 AND year <= 2020)


            `MetadataFilter` object list:
             metadata_filters = [
             {key = "chunk.custom_metadata.year"
              conditions = [{int_value = 2015, operation = GREATER}]},
             {key = "chunk.custom_metadata.year"
              conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]

            Note: "AND"s for the same key are only supported for numeric values.
            String

            values only support "OR"s for the same key.
          items:
            $ref: '#/components/schemas/MetadataFilter'
        resultsCount:
          type: integer
          description: |-
            Optional. The maximum number of `Chunk`s to return.
            The service may return fewer `Chunk`s.

            If unspecified, at most 10 `Chunk`s will be returned.
            The maximum specified result count is 100.
          format: int32
      description: Request for querying a `Corpus`.
    QueryCorpusResponse:
      type: object
      properties:
        relevantChunks:
          type: array
          description: The relevant chunks.
          items:
            $ref: '#/components/schemas/RelevantChunk'
      description: Response from `QueryCorpus` containing a list of relevant chunks.
    RelevantChunk:
      type: object
      properties:
        chunkRelevanceScore:
          type: number
          description: '`Chunk` relevance to the query.'
          format: float
        chunk:
          description: '`Chunk` associated with the query.'
          allOf:
            - $ref: '#/components/schemas/Chunk'
        document:
          description: '`Document` associated with the chunk.'
          allOf:
            - $ref: '#/components/schemas/Document'
      description: The information for a chunk relevant to a query.
    Chunk:
      required:
        - data
      type: object
      properties:
        name:
          type: string
          description: >-
            Immutable. Identifier. The `Chunk` resource name. The ID (name
            excluding the

            "corpora/*/documents/*/chunks/" prefix) can contain up to 40
            characters

            that are lowercase alphanumeric or dashes (-). The ID cannot start
            or end

            with a dash. If the name is empty on create, a random 12-character
            unique

            ID will be generated.

            Example:
            `corpora/{corpus_id}/documents/{document_id}/chunks/123a456b789c`
          x-google-immutable: true
          x-google-identifier: true
        data:
          description: |-
            Required. The content for the `Chunk`, such as the text string.
            The maximum number of tokens per chunk is 2043.
          allOf:
            - $ref: '#/components/schemas/ChunkData'
        customMetadata:
          type: array
          description: |-
            Optional. User provided custom metadata stored as key-value pairs.
            The maximum number of `CustomMetadata` per chunk is 20.
          items:
            $ref: '#/components/schemas/CustomMetadata'
        createTime:
          type: string
          description: Output only. The Timestamp of when the `Chunk` was created.
          format: date-time
          readOnly: true
        updateTime:
          type: string
          description: Output only. The Timestamp of when the `Chunk` was last updated.
          format: date-time
          readOnly: true
        state:
          type: string
          description: Output only. Current state of the `Chunk`.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - STATE_PENDING_PROCESSING
            - STATE_ACTIVE
            - STATE_FAILED
          x-google-enum-descriptions:
            - The default value. This value is used if the state is omitted.
            - '`Chunk` is being processed (embedding and vector storage).'
            - '`Chunk` is processed and available for querying.'
            - '`Chunk` failed processing.'
      description: >-
        A `Chunk` is a subpart of a `Document` that is treated as an independent
        unit

        for the purposes of vector representation and storage.

        A `Corpus` can have a maximum of 1 million `Chunk`s.
    ChunkData:
      type: object
      properties:
        stringValue:
          type: string
          description: |-
            The `Chunk` content as a string.
            The maximum number of tokens per chunk is 2043.
      description: Extracted data that represents the `Chunk` content.
    CustomMetadata:
      required:
        - key
      type: object
      properties:
        stringValue:
          type: string
          description: The string value of the metadata to store.
        stringListValue:
          description: The StringList value of the metadata to store.
          allOf:
            - $ref: '#/components/schemas/StringList'
        numericValue:
          type: number
          description: The numeric value of the metadata to store.
          format: float
        key:
          type: string
          description: Required. The key of the metadata to store.
      description: User provided metadata stored as key-value pairs.
    StringList:
      type: object
      properties:
        values:
          type: array
          description: The string values of the metadata to store.
          items:
            type: string
      description: User provided string values assigned to a single metadata key.
    Document:
      type: object
      properties:
        name:
          type: string
          description: >-
            Immutable. Identifier. The `Document` resource name. The ID (name
            excluding the

            "corpora/*/documents/" prefix) can contain up to 40 characters that
            are

            lowercase alphanumeric or dashes (-). The ID cannot start or end
            with a

            dash. If the name is empty on create, a unique name will be derived
            from

            `display_name` along with a 12 character random suffix.

            Example: `corpora/{corpus_id}/documents/my-awesome-doc-123a456b789c`
          x-google-immutable: true
          x-google-identifier: true
        displayName:
          type: string
          description: >-
            Optional. The human-readable display name for the `Document`. The
            display name must

            be no more than 512 characters in length, including spaces.

            Example: "Semantic Retriever Documentation"
        customMetadata:
          type: array
          description: >-
            Optional. User provided custom metadata stored as key-value pairs
            used for querying.

            A `Document` can have a maximum of 20 `CustomMetadata`.
          items:
            $ref: '#/components/schemas/CustomMetadata'
        updateTime:
          type: string
          description: Output only. The Timestamp of when the `Document` was last updated.
          format: date-time
          readOnly: true
        createTime:
          type: string
          description: Output only. The Timestamp of when the `Document` was created.
          format: date-time
          readOnly: true
      description: |-
        A `Document` is a collection of `Chunk`s.
        A `Corpus` can have a maximum of 10,000 `Document`s.
    ListDocumentsResponse:
      type: object
      properties:
        documents:
          type: array
          description: The returned `Document`s.
          items:
            $ref: '#/components/schemas/Document'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.

            If this field is omitted, there are no more pages.
      description: >-
        Response from `ListDocuments` containing a paginated list of
        `Document`s.

        The `Document`s are sorted by ascending `document.create_time`.
    QueryDocumentRequest:
      required:
        - query
      type: object
      properties:
        query:
          type: string
          description: Required. Query string to perform semantic search.
        resultsCount:
          type: integer
          description: |-
            Optional. The maximum number of `Chunk`s to return.
            The service may return fewer `Chunk`s.

            If unspecified, at most 10 `Chunk`s will be returned.
            The maximum specified result count is 100.
          format: int32
        metadataFilters:
          type: array
          description: >-
            Optional. Filter for `Chunk` metadata. Each `MetadataFilter` object
            should

            correspond to a unique key. Multiple `MetadataFilter` objects are
            joined by

            logical "AND"s.


            Note: `Document`-level filtering is not supported for this request
            because

            a `Document` name is already specified.


            Example query:

            (year >= 2020 OR year < 2010) AND (genre = drama OR genre = action)


            `MetadataFilter` object list:
             metadata_filters = [
             {key = "chunk.custom_metadata.year"
              conditions = [{int_value = 2020, operation = GREATER_EQUAL},
                            {int_value = 2010, operation = LESS}},
             {key = "chunk.custom_metadata.genre"
              conditions = [{string_value = "drama", operation = EQUAL},
                            {string_value = "action", operation = EQUAL}}]

            Example query for a numeric range of values:

            (year > 2015 AND year <= 2020)


            `MetadataFilter` object list:
             metadata_filters = [
             {key = "chunk.custom_metadata.year"
              conditions = [{int_value = 2015, operation = GREATER}]},
             {key = "chunk.custom_metadata.year"
              conditions = [{int_value = 2020, operation = LESS_EQUAL}]}]

            Note: "AND"s for the same key are only supported for numeric values.
            String

            values only support "OR"s for the same key.
          items:
            $ref: '#/components/schemas/MetadataFilter'
      description: Request for querying a `Document`.
    QueryDocumentResponse:
      type: object
      properties:
        relevantChunks:
          type: array
          description: The returned relevant chunks.
          items:
            $ref: '#/components/schemas/RelevantChunk'
      description: Response from `QueryDocument` containing a list of relevant chunks.
    BatchCreateChunksRequest:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: |-
            Required. The request messages specifying the `Chunk`s to create.
            A maximum of 100 `Chunk`s can be created in a batch.
          items:
            $ref: '#/components/schemas/CreateChunkRequest'
      description: Request to batch create `Chunk`s.
    CreateChunkRequest:
      required:
        - chunk
        - parent
      type: object
      properties:
        parent:
          type: string
          description: >-
            Required. The name of the `Document` where this `Chunk` will be
            created.

            Example: `corpora/my-corpus-123/documents/the-doc-abc`
        chunk:
          description: Required. The `Chunk` to create.
          allOf:
            - $ref: '#/components/schemas/Chunk'
      description: Request to create a `Chunk`.
    BatchCreateChunksResponse:
      type: object
      properties:
        chunks:
          type: array
          description: '`Chunk`s created.'
          items:
            $ref: '#/components/schemas/Chunk'
      description: Response from `BatchCreateChunks` containing a list of created `Chunk`s.
    BatchUpdateChunksRequest:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: |-
            Required. The request messages specifying the `Chunk`s to update.
            A maximum of 100 `Chunk`s can be updated in a batch.
          items:
            $ref: '#/components/schemas/UpdateChunkRequest'
      description: Request to batch update `Chunk`s.
    UpdateChunkRequest:
      required:
        - chunk
        - updateMask
      type: object
      properties:
        chunk:
          description: Required. The `Chunk` to update.
          allOf:
            - $ref: '#/components/schemas/Chunk'
        updateMask:
          pattern: '^(\s*[^,\s.]+(\s*[,.]\s*[^,\s.]+)*)?$'
          type: string
          description: |-
            Required. The list of fields to update.
            Currently, this only supports updating `custom_metadata` and `data`.
          format: google-fieldmask
      description: Request to update a `Chunk`.
    BatchUpdateChunksResponse:
      type: object
      properties:
        chunks:
          type: array
          description: '`Chunk`s updated.'
          items:
            $ref: '#/components/schemas/Chunk'
      description: Response from `BatchUpdateChunks` containing a list of updated `Chunk`s.
    BatchDeleteChunksRequest:
      required:
        - requests
      type: object
      properties:
        requests:
          type: array
          description: Required. The request messages specifying the `Chunk`s to delete.
          items:
            $ref: '#/components/schemas/DeleteChunkRequest'
      description: Request to batch delete `Chunk`s.
    DeleteChunkRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: >-
            Required. The resource name of the `Chunk` to delete.

            Example:
            `corpora/my-corpus-123/documents/the-doc-abc/chunks/some-chunk`
      description: Request to delete a `Chunk`.
    ListChunksResponse:
      type: object
      properties:
        chunks:
          type: array
          description: The returned `Chunk`s.
          items:
            $ref: '#/components/schemas/Chunk'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.

            If this field is omitted, there are no more pages.
      description: |-
        Response from `ListChunks` containing a paginated list of `Chunk`s.
        The `Chunk`s are sorted by ascending `chunk.create_time`.
    GenerateTextRequest:
      required:
        - prompt
      type: object
      properties:
        prompt:
          description: |-
            Required. The free-form input text given to the model as a prompt.

            Given a prompt, the model will generate a TextCompletion response it
            predicts as the completion of the input text.
          allOf:
            - $ref: '#/components/schemas/TextPrompt'
        temperature:
          type: number
          description: >-
            Optional. Controls the randomness of the output.

            Note: The default value varies by model, see the `Model.temperature`

            attribute of the `Model` returned the `getModel` function.


            Values can range from [0.0,1.0],

            inclusive. A value closer to 1.0 will produce responses that are
            more

            varied and creative, while a value closer to 0.0 will typically
            result in

            more straightforward responses from the model.
          format: float
        candidateCount:
          type: integer
          description: >-
            Optional. Number of generated responses to return.


            This value must be between [1, 8], inclusive. If unset, this will
            default

            to 1.
          format: int32
        maxOutputTokens:
          type: integer
          description: >-
            Optional. The maximum number of tokens to include in a candidate.


            If unset, this will default to output_token_limit specified in the
            `Model`

            specification.
          format: int32
        topP:
          type: number
          description: >-
            Optional. The maximum cumulative probability of tokens to consider
            when sampling.


            The model uses combined Top-k and nucleus sampling.


            Tokens are sorted based on their assigned probabilities so that only
            the

            most likely tokens are considered. Top-k sampling directly limits
            the

            maximum number of tokens to consider, while Nucleus sampling limits
            number

            of tokens based on the cumulative probability.


            Note: The default value varies by model, see the `Model.top_p`

            attribute of the `Model` returned the `getModel` function.
          format: float
        topK:
          type: integer
          description: |-
            Optional. The maximum number of tokens to consider when sampling.

            The model uses combined Top-k and nucleus sampling.

            Top-k sampling considers the set of `top_k` most probable tokens.
            Defaults to 40.

            Note: The default value varies by model, see the `Model.top_k`
            attribute of the `Model` returned the `getModel` function.
          format: int32
        safetySettings:
          type: array
          description: >-
            Optional. A list of unique `SafetySetting` instances for blocking
            unsafe content.


            that will be enforced on the `GenerateTextRequest.prompt` and

            `GenerateTextResponse.candidates`. There should not be more than one

            setting for each `SafetyCategory` type. The API will block any
            prompts and

            responses that fail to meet the thresholds set by these settings.
            This list

            overrides the default settings for each `SafetyCategory` specified
            in the

            safety_settings. If there is no `SafetySetting` for a given

            `SafetyCategory` provided in the list, the API will use the default
            safety

            setting for that category. Harm categories HARM_CATEGORY_DEROGATORY,

            HARM_CATEGORY_TOXICITY, HARM_CATEGORY_VIOLENCE,
            HARM_CATEGORY_SEXUAL,

            HARM_CATEGORY_MEDICAL, HARM_CATEGORY_DANGEROUS are supported in text

            service.
          items:
            $ref: '#/components/schemas/SafetySetting'
        stopSequences:
          type: array
          description: >-
            The set of character sequences (up to 5) that will stop output
            generation.

            If specified, the API will stop at the first appearance of a stop

            sequence. The stop sequence will not be included as part of the
            response.
          items:
            type: string
      description: Request to generate a text completion response from the model.
    TextPrompt:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: Required. The prompt text.
      description: |-
        Text given to the model as a prompt.

        The Model will use this TextPrompt to Generate a text completion.
    GenerateTextResponse:
      type: object
      properties:
        candidates:
          type: array
          description: Candidate responses from the model.
          items:
            $ref: '#/components/schemas/TextCompletion'
        filters:
          type: array
          description: >-
            A set of content filtering metadata for the prompt and response

            text.


            This indicates which `SafetyCategory`(s) blocked a

            candidate from this response, the lowest `HarmProbability`

            that triggered a block, and the HarmThreshold setting for that
            category.

            This indicates the smallest change to the `SafetySettings` that
            would be

            necessary to unblock at least 1 response.


            The blocking is configured by the `SafetySettings` in the request
            (or the

            default `SafetySettings` of the API).
          items:
            $ref: '#/components/schemas/ContentFilter'
        safetyFeedback:
          type: array
          description: Returns any safety feedback related to content filtering.
          items:
            $ref: '#/components/schemas/SafetyFeedback'
      description: 'The response from the model, including candidate completions.'
    TextCompletion:
      type: object
      properties:
        output:
          type: string
          description: Output only. The generated text returned from the model.
          readOnly: true
        safetyRatings:
          type: array
          description: |-
            Ratings for the safety of a response.

            There is at most one rating per category.
          items:
            $ref: '#/components/schemas/SafetyRating'
        citationMetadata:
          description: >-
            Output only. Citation information for model-generated `output` in
            this

            `TextCompletion`.


            This field may be populated with attribution information for any
            text

            included in the `output`.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/CitationMetadata'
      description: Output text returned from a model.
    SafetyFeedback:
      type: object
      properties:
        rating:
          description: Safety rating evaluated from content.
          allOf:
            - $ref: '#/components/schemas/SafetyRating'
        setting:
          description: Safety settings applied to the request.
          allOf:
            - $ref: '#/components/schemas/SafetySetting'
      description: >-
        Safety feedback for an entire request.


        This field is populated if content in the input and/or response is
        blocked

        due to safety settings. SafetyFeedback may not exist for every
        HarmCategory.

        Each SafetyFeedback will return the safety settings used by the request
        as

        well as the lowest HarmProbability that should be allowed in order to
        return

        a result.
    EmbedTextRequest:
      required:
        - model
      type: object
      properties:
        model:
          type: string
          description: >-
            Required. The model name to use with the format
            model=models/{model}.
        text:
          type: string
          description: >-
            Optional. The free-form input text that the model will turn into an
            embedding.
      description: Request to get a text embedding from the model.
    EmbedTextResponse:
      type: object
      properties:
        embedding:
          description: Output only. The embedding generated from the input text.
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Embedding'
      description: The response to a EmbedTextRequest.
    Embedding:
      type: object
      properties:
        value:
          type: array
          description: The embedding values.
          items:
            type: number
            format: float
      description: A list of floats representing the embedding.
    BatchEmbedTextRequest:
      type: object
      properties:
        texts:
          type: array
          description: >-
            Optional. The free-form input texts that the model will turn into an
            embedding. The

            current limit is 100 texts, over which an error will be thrown.
          items:
            type: string
        requests:
          type: array
          description: >-
            Optional. Embed requests for the batch. Only one of `texts` or
            `requests` can be set.
          items:
            $ref: '#/components/schemas/EmbedTextRequest'
      description: Batch request to get a text embedding from the model.
    BatchEmbedTextResponse:
      type: object
      properties:
        embeddings:
          type: array
          description: Output only. The embeddings generated from the input text.
          readOnly: true
          items:
            $ref: '#/components/schemas/Embedding'
      description: The response to a EmbedTextRequest.
    CountTextTokensRequest:
      required:
        - prompt
      type: object
      properties:
        prompt:
          description: Required. The free-form input text given to the model as a prompt.
          allOf:
            - $ref: '#/components/schemas/TextPrompt'
      description: >-
        Counts the number of tokens in the `prompt` sent to a model.


        Models may tokenize text differently, so each model may return a
        different

        `token_count`.
    CountTextTokensResponse:
      type: object
      properties:
        tokenCount:
          type: integer
          description: |-
            The number of tokens that the `model` tokenizes the `prompt` into.

            Always non-negative.
          format: int32
      description: |-
        A response from `CountTextTokens`.

        It returns the model's `token_count` for the `prompt`.
    BaseOperation:
      type: object
      properties:
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with
            `operations/{unique_id}`.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or
            `response` is

            available.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          allOf:
            - $ref: '#/components/schemas/Status'
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
    Operation:
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      allOf:
        - $ref: '#/components/schemas/BaseOperation'
        - type: object
          properties:
            metadata:
              type: object
              additionalProperties:
                description: Properties of the object. Contains field @type with type URL.
              description: >-
                Service-specific metadata associated with the operation.  It
                typically

                contains progress information and common metadata such as create
                time.

                Some services might not provide such metadata.  Any method that
                returns a

                long-running operation should document the metadata type, if
                any.
            response:
              type: object
              additionalProperties:
                description: Properties of the object. Contains field @type with type URL.
              description: >-
                The normal, successful response of the operation.  If the
                original

                method returns no data on success, such as `Delete`, the
                response is

                `google.protobuf.Empty`.  If the original method is standard

                `Get`/`Create`/`Update`, the response should be the resource. 
                For other

                methods, the response should have the type `XxxResponse`, where
                `Xxx`

                is the original method name.  For example, if the original
                method name

                is `TakeSnapshot()`, the inferred response type is

                `TakeSnapshotResponse`.
    BatchGenerateContentOperation:
      type: object
      description: >-
        This resource represents a long-running operation where metadata and
        response fields are strongly typed.
      allOf:
        - $ref: '#/components/schemas/BaseOperation'
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/GenerateContentBatch'
            response:
              $ref: '#/components/schemas/BatchGenerateContentResponse'
    AsyncBatchEmbedContentOperation:
      type: object
      description: >-
        This resource represents a long-running operation where metadata and
        response fields are strongly typed.
      allOf:
        - $ref: '#/components/schemas/BaseOperation'
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/EmbedContentBatch'
            response:
              $ref: '#/components/schemas/AsyncBatchEmbedContentResponse'
    CreateTunedModelOperation:
      type: object
      description: >-
        This resource represents a long-running operation where metadata and
        response fields are strongly typed.
      allOf:
        - $ref: '#/components/schemas/BaseOperation'
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/CreateTunedModelMetadata'
            response:
              $ref: '#/components/schemas/TunedModel'
    PredictLongRunningOperation:
      type: object
      description: >-
        This resource represents a long-running operation where metadata and
        response fields are strongly typed.
      allOf:
        - $ref: '#/components/schemas/BaseOperation'
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/PredictLongRunningMetadata'
            response:
              $ref: '#/components/schemas/PredictLongRunningResponse'
    Type:
      type: string
      enum:
        - TYPE_UNSPECIFIED
        - STRING
        - NUMBER
        - INTEGER
        - BOOLEAN
        - ARRAY
        - OBJECT
        - 'NULL'
      x-google-enum-descriptions:
        - 'Not specified, should not be used.'
        - String type.
        - Number type.
        - Integer type.
        - Boolean type.
        - Array type.
        - Object type.
        - Null type.
    HarmCategory:
      type: string
      enum:
        - HARM_CATEGORY_UNSPECIFIED
        - HARM_CATEGORY_DEROGATORY
        - HARM_CATEGORY_TOXICITY
        - HARM_CATEGORY_VIOLENCE
        - HARM_CATEGORY_SEXUAL
        - HARM_CATEGORY_MEDICAL
        - HARM_CATEGORY_DANGEROUS
        - HARM_CATEGORY_HARASSMENT
        - HARM_CATEGORY_HATE_SPEECH
        - HARM_CATEGORY_SEXUALLY_EXPLICIT
        - HARM_CATEGORY_DANGEROUS_CONTENT
        - HARM_CATEGORY_CIVIC_INTEGRITY
      x-google-enum-descriptions:
        - Category is unspecified.
        - >-
          **PaLM** - Negative or harmful comments targeting identity and/or
          protected

          attribute.
        - '**PaLM** - Content that is rude, disrespectful, or profane.'
        - >-
          **PaLM** - Describes scenarios depicting violence against an
          individual or

          group, or general descriptions of gore.
        - '**PaLM** - Contains references to sexual acts or other lewd content.'
        - '**PaLM** - Promotes unchecked medical advice.'
        - |-
          **PaLM** - Dangerous content that promotes, facilitates, or encourages
          harmful acts.
        - '**Gemini** - Harassment content.'
        - '**Gemini** - Hate speech and content.'
        - '**Gemini** - Sexually explicit content.'
        - '**Gemini** - Dangerous content.'
        - |-
          **Gemini** - Content that may be used to harm civic integrity.
          DEPRECATED: use enable_enhanced_civic_answers instead.
      x-google-enum-deprecated:
        - false
        - false
        - false
        - false
        - false
        - false
        - false
        - false
        - false
        - false
        - false
        - true
    GenerativeLanguageModality:
      type: string
      enum:
        - MODALITY_UNSPECIFIED
        - TEXT
        - IMAGE
        - VIDEO
        - AUDIO
        - DOCUMENT
      x-google-enum-descriptions:
        - Unspecified modality.
        - Plain text.
        - Image.
        - Video.
        - Audio.
        - 'Document, e.g. PDF.'
    TaskType:
      type: string
      enum:
        - TASK_TYPE_UNSPECIFIED
        - RETRIEVAL_QUERY
        - RETRIEVAL_DOCUMENT
        - SEMANTIC_SIMILARITY
        - CLASSIFICATION
        - CLUSTERING
        - QUESTION_ANSWERING
        - FACT_VERIFICATION
        - CODE_RETRIEVAL_QUERY
      x-google-enum-descriptions:
        - 'Unset value, which will default to one of the other enum values.'
        - Specifies the given text is a query in a search/retrieval setting.
        - Specifies the given text is a document from the corpus being searched.
        - Specifies the given text will be used for STS.
        - Specifies that the given text will be classified.
        - Specifies that the embeddings will be used for clustering.
        - Specifies that the given text will be used for question answering.
        - Specifies that the given text will be used for fact verification.
        - Specifies that the given text will be used for code retrieval.
    BatchState:
      type: string
      enum:
        - BATCH_STATE_UNSPECIFIED
        - BATCH_STATE_PENDING
        - BATCH_STATE_RUNNING
        - BATCH_STATE_SUCCEEDED
        - BATCH_STATE_FAILED
        - BATCH_STATE_CANCELLED
        - BATCH_STATE_EXPIRED
      x-google-enum-descriptions:
        - The batch state is unspecified.
        - The service is preparing to run the batch.
        - The batch is in progress.
        - The batch completed successfully.
        - The batch failed.
        - The batch has been cancelled.
        - The batch has expired.
  parameters:
    alt:
      name: $alt
      in: query
      description: Data format for response.
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: json
        enum:
          - json
          - media
          - proto
        x-google-enum-descriptions:
          - Responses with Content-Type of application/json
          - Media download with context-dependent Content-Type
          - Responses with Content-Type of application/x-protobuf
    callback:
      name: $callback
      in: query
      description: JSONP
      required: false
      style: form
      explode: true
      schema:
        type: string
    prettyPrint:
      name: $prettyPrint
      in: query
      description: Returns response with indentations and line breaks.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: true
    _.xgafv:
      name: $.xgafv
      in: query
      description: V1 error format.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
          - '1'
          - '2'
        x-google-enum-descriptions:
          - v1 error format
          - v2 error format
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://test.com'
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-api-key-header: ApiKey
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'https://generativelanguage.googleapis.com'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'https://generativelanguage.googleapis.com'
  type: http
x-wso2-basePath: /generativelanguageapi/v1beta
x-wso2-transports:
  - http
  - https
x-wso2-application-security:
  security-types:
    - oauth2
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
